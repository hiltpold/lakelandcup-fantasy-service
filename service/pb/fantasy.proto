syntax = "proto3";

package fantasy;

option go_package = "./service/pb";

service FantasyService {
  rpc CreateLeague(LeagueRequest) returns (LeagueResponse) {}
  rpc GetLeagues(GetLeaguesRequest) returns (GetLeaguesResponse) {}
  rpc GetLeague(GetLeagueRequest) returns (GetLeagueResponse) {}
  rpc GetLeagueFranchisePairs(GetLeagueFranchisePairsRequest) returns (GetLeagueFranchisePairsResponse) {}
  rpc CreateFranchise(FranchiseRequest) returns (FranchiseResponse) {}
  rpc GetFranchise(GetFranchiseRequest) returns (GetFranchiseResponse) {}
  rpc CreateUndraftedProspects(CreateUndraftedProspectsRequest) returns (CreateUndraftedProspectsResponse) {}
  rpc CreateProspect(CreateProspectRequest) returns (CreateProspectResponse) {}
}

/*
    Lakelandcup
*/

message League {
	string ID = 1;
    string LeagueFounder = 2;
    string LeagueName = 3;
    string FoundationYear = 4;
    int32 MaxFranchises = 5;
    repeated Franchise Franchises = 6;
}

message Franchise {
	string ID = 1;
    string FranchisOwner = 2;
    string FranchiseName = 3;
    string FoundationYear = 4;
    string LeagueID = 5;
    repeated Prospect Prospects = 6;
}

message Prospect {
	string ID = 1;
    string fullName = 2;
    string firstName = 3;
    string lastName = 4;
    string birthdate = 5;
    string LeagueID = 6;
    string FranchiseID = 7;
    string PickID = 8;
}

message Pick {
	string ID = 1;
    string DraftYear = 2;
    string DraftRound= 3;
    string DraftPickOverall= 4;
    string DraftPickInRound = 5;
    string ProspectID = 6;
}

// League

// create
message LeagueRequest {
  string userId = 1;
  string leagueName = 2;
  string foundationYear = 3;
  int32 maxFranchises = 4;
}

message LeagueResponse {
  int64 status = 1;
  string error = 2;
  string leagueId = 3;
}

// get all leagues
message GetLeaguesRequest{
}

message GetLeaguesResponse {
  int64 status = 1;
  string error = 2;
  repeated League result = 3;
}

// get single league
message GetLeagueRequest{
    string leagueId = 1;
}

message GetLeagueResponse {
  int64 status = 1;
  string error = 2;
  League result = 3;
}

// get all leagues an associated franchises
message GetLeagueFranchisePairsRequest {
    string userId = 2;
}

message LeagueFranchisePair {
    string LeagueID = 1;
    string FranchiseID = 2;
}

message GetLeagueFranchisePairsResponse {
    int64 status = 1;
    string error = 2;
    repeated LeagueFranchisePair result  = 3;
}

// Franchise

// create franchise
message FranchiseRequest {
  string leagueId = 1;
  string franchiseOwner = 2;
  string franchiseName = 3;
  string foundationYear = 4;
}

message FranchiseResponse {
  int64 status = 1;
  string error = 2;
  string franchiseId = 3;
}

// get single league
message GetFranchiseRequest{
    string franchiseId = 1;
}

message GetFranchiseResponse {
  int64 status = 1;
  string error = 2;
  Franchise result = 3;
}

// Prospects

message CreateProspectRequest {
  Prospect prospect = 1;
}
message CreateProspectResponse {
  int64 status = 1;
  string error = 2;
  string prospectID = 3;
}

message CreateUndraftedProspectsRequest {
    repeated Prospect prospects = 1;
}

message CreateUndraftedProspectsResponse {
  int64 status = 1;
  string error = 2;
  repeated string prospectIds = 3;
}

// Picks