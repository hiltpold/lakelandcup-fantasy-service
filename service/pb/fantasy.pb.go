// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.21.9
// source: service/pb/fantasy.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type League struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                string       `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Admin             string       `protobuf:"bytes,2,opt,name=Admin,proto3" json:"Admin,omitempty"`
	AdminID           string       `protobuf:"bytes,3,opt,name=AdminID,proto3" json:"AdminID,omitempty"`
	Commissioner      string       `protobuf:"bytes,4,opt,name=Commissioner,proto3" json:"Commissioner,omitempty"`
	CommissionerID    string       `protobuf:"bytes,5,opt,name=CommissionerID,proto3" json:"CommissionerID,omitempty"`
	Name              string       `protobuf:"bytes,6,opt,name=Name,proto3" json:"Name,omitempty"`
	FoundationYear    string       `protobuf:"bytes,7,opt,name=FoundationYear,proto3" json:"FoundationYear,omitempty"`
	MaxFranchises     int32        `protobuf:"varint,8,opt,name=MaxFranchises,proto3" json:"MaxFranchises,omitempty"`
	MaxProspects      int32        `protobuf:"varint,9,opt,name=MaxProspects,proto3" json:"MaxProspects,omitempty"`
	DraftRightsGoalie int32        `protobuf:"varint,10,opt,name=DraftRightsGoalie,proto3" json:"DraftRightsGoalie,omitempty"`
	DraftRightsSkater int32        `protobuf:"varint,11,opt,name=DraftRightsSkater,proto3" json:"DraftRightsSkater,omitempty"`
	Franchises        []*Franchise `protobuf:"bytes,12,rep,name=Franchises,proto3" json:"Franchises,omitempty"`
}

func (x *League) Reset() {
	*x = League{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *League) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*League) ProtoMessage() {}

func (x *League) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use League.ProtoReflect.Descriptor instead.
func (*League) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{0}
}

func (x *League) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *League) GetAdmin() string {
	if x != nil {
		return x.Admin
	}
	return ""
}

func (x *League) GetAdminID() string {
	if x != nil {
		return x.AdminID
	}
	return ""
}

func (x *League) GetCommissioner() string {
	if x != nil {
		return x.Commissioner
	}
	return ""
}

func (x *League) GetCommissionerID() string {
	if x != nil {
		return x.CommissionerID
	}
	return ""
}

func (x *League) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *League) GetFoundationYear() string {
	if x != nil {
		return x.FoundationYear
	}
	return ""
}

func (x *League) GetMaxFranchises() int32 {
	if x != nil {
		return x.MaxFranchises
	}
	return 0
}

func (x *League) GetMaxProspects() int32 {
	if x != nil {
		return x.MaxProspects
	}
	return 0
}

func (x *League) GetDraftRightsGoalie() int32 {
	if x != nil {
		return x.DraftRightsGoalie
	}
	return 0
}

func (x *League) GetDraftRightsSkater() int32 {
	if x != nil {
		return x.DraftRightsSkater
	}
	return 0
}

func (x *League) GetFranchises() []*Franchise {
	if x != nil {
		return x.Franchises
	}
	return nil
}

type Franchise struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID             string      `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name           string      `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	OwnerID        string      `protobuf:"bytes,3,opt,name=OwnerID,proto3" json:"OwnerID,omitempty"`
	OwnerName      string      `protobuf:"bytes,4,opt,name=OwnerName,proto3" json:"OwnerName,omitempty"`
	FoundationYear string      `protobuf:"bytes,5,opt,name=FoundationYear,proto3" json:"FoundationYear,omitempty"`
	LeagueID       string      `protobuf:"bytes,6,opt,name=LeagueID,proto3" json:"LeagueID,omitempty"`
	Prospects      []*Prospect `protobuf:"bytes,7,rep,name=Prospects,proto3" json:"Prospects,omitempty"`
}

func (x *Franchise) Reset() {
	*x = Franchise{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Franchise) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Franchise) ProtoMessage() {}

func (x *Franchise) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Franchise.ProtoReflect.Descriptor instead.
func (*Franchise) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{1}
}

func (x *Franchise) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Franchise) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Franchise) GetOwnerID() string {
	if x != nil {
		return x.OwnerID
	}
	return ""
}

func (x *Franchise) GetOwnerName() string {
	if x != nil {
		return x.OwnerName
	}
	return ""
}

func (x *Franchise) GetFoundationYear() string {
	if x != nil {
		return x.FoundationYear
	}
	return ""
}

func (x *Franchise) GetLeagueID() string {
	if x != nil {
		return x.LeagueID
	}
	return ""
}

func (x *Franchise) GetProspects() []*Prospect {
	if x != nil {
		return x.Prospects
	}
	return nil
}

type Prospect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	FullName    string `protobuf:"bytes,2,opt,name=fullName,proto3" json:"fullName,omitempty"`
	FirstName   string `protobuf:"bytes,3,opt,name=firstName,proto3" json:"firstName,omitempty"`
	LastName    string `protobuf:"bytes,4,opt,name=lastName,proto3" json:"lastName,omitempty"`
	Birthdate   string `protobuf:"bytes,5,opt,name=birthdate,proto3" json:"birthdate,omitempty"`
	LeagueID    string `protobuf:"bytes,6,opt,name=LeagueID,proto3" json:"LeagueID,omitempty"`
	FranchiseID string `protobuf:"bytes,7,opt,name=FranchiseID,proto3" json:"FranchiseID,omitempty"`
	PickID      string `protobuf:"bytes,8,opt,name=PickID,proto3" json:"PickID,omitempty"`
}

func (x *Prospect) Reset() {
	*x = Prospect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Prospect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Prospect) ProtoMessage() {}

func (x *Prospect) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Prospect.ProtoReflect.Descriptor instead.
func (*Prospect) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{2}
}

func (x *Prospect) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Prospect) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *Prospect) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *Prospect) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *Prospect) GetBirthdate() string {
	if x != nil {
		return x.Birthdate
	}
	return ""
}

func (x *Prospect) GetLeagueID() string {
	if x != nil {
		return x.LeagueID
	}
	return ""
}

func (x *Prospect) GetFranchiseID() string {
	if x != nil {
		return x.FranchiseID
	}
	return ""
}

func (x *Prospect) GetPickID() string {
	if x != nil {
		return x.PickID
	}
	return ""
}

type Pick struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID               string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	DraftYear        string `protobuf:"bytes,2,opt,name=DraftYear,proto3" json:"DraftYear,omitempty"`
	DraftRound       string `protobuf:"bytes,3,opt,name=DraftRound,proto3" json:"DraftRound,omitempty"`
	DraftPickOverall string `protobuf:"bytes,4,opt,name=DraftPickOverall,proto3" json:"DraftPickOverall,omitempty"`
	DraftPickInRound string `protobuf:"bytes,5,opt,name=DraftPickInRound,proto3" json:"DraftPickInRound,omitempty"`
	ProspectID       string `protobuf:"bytes,6,opt,name=ProspectID,proto3" json:"ProspectID,omitempty"`
}

func (x *Pick) Reset() {
	*x = Pick{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pick) ProtoMessage() {}

func (x *Pick) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pick.ProtoReflect.Descriptor instead.
func (*Pick) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{3}
}

func (x *Pick) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Pick) GetDraftYear() string {
	if x != nil {
		return x.DraftYear
	}
	return ""
}

func (x *Pick) GetDraftRound() string {
	if x != nil {
		return x.DraftRound
	}
	return ""
}

func (x *Pick) GetDraftPickOverall() string {
	if x != nil {
		return x.DraftPickOverall
	}
	return ""
}

func (x *Pick) GetDraftPickInRound() string {
	if x != nil {
		return x.DraftPickInRound
	}
	return ""
}

func (x *Pick) GetProspectID() string {
	if x != nil {
		return x.ProspectID
	}
	return ""
}

// create
type LeagueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Admin             string `protobuf:"bytes,1,opt,name=Admin,proto3" json:"Admin,omitempty"`
	AdminID           string `protobuf:"bytes,2,opt,name=AdminID,proto3" json:"AdminID,omitempty"`
	Commissioner      string `protobuf:"bytes,3,opt,name=Commissioner,proto3" json:"Commissioner,omitempty"`
	CommissionerID    string `protobuf:"bytes,4,opt,name=CommissionerID,proto3" json:"CommissionerID,omitempty"`
	Name              string `protobuf:"bytes,5,opt,name=Name,proto3" json:"Name,omitempty"`
	FoundationYear    string `protobuf:"bytes,6,opt,name=FoundationYear,proto3" json:"FoundationYear,omitempty"`
	MaxFranchises     int32  `protobuf:"varint,7,opt,name=MaxFranchises,proto3" json:"MaxFranchises,omitempty"`
	MaxProspects      int32  `protobuf:"varint,8,opt,name=MaxProspects,proto3" json:"MaxProspects,omitempty"`
	DraftRightsGoalie int32  `protobuf:"varint,9,opt,name=DraftRightsGoalie,proto3" json:"DraftRightsGoalie,omitempty"`
	DraftRightsSkater int32  `protobuf:"varint,10,opt,name=DraftRightsSkater,proto3" json:"DraftRightsSkater,omitempty"`
}

func (x *LeagueRequest) Reset() {
	*x = LeagueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeagueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeagueRequest) ProtoMessage() {}

func (x *LeagueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeagueRequest.ProtoReflect.Descriptor instead.
func (*LeagueRequest) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{4}
}

func (x *LeagueRequest) GetAdmin() string {
	if x != nil {
		return x.Admin
	}
	return ""
}

func (x *LeagueRequest) GetAdminID() string {
	if x != nil {
		return x.AdminID
	}
	return ""
}

func (x *LeagueRequest) GetCommissioner() string {
	if x != nil {
		return x.Commissioner
	}
	return ""
}

func (x *LeagueRequest) GetCommissionerID() string {
	if x != nil {
		return x.CommissionerID
	}
	return ""
}

func (x *LeagueRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LeagueRequest) GetFoundationYear() string {
	if x != nil {
		return x.FoundationYear
	}
	return ""
}

func (x *LeagueRequest) GetMaxFranchises() int32 {
	if x != nil {
		return x.MaxFranchises
	}
	return 0
}

func (x *LeagueRequest) GetMaxProspects() int32 {
	if x != nil {
		return x.MaxProspects
	}
	return 0
}

func (x *LeagueRequest) GetDraftRightsGoalie() int32 {
	if x != nil {
		return x.DraftRightsGoalie
	}
	return 0
}

func (x *LeagueRequest) GetDraftRightsSkater() int32 {
	if x != nil {
		return x.DraftRightsSkater
	}
	return 0
}

// update
type LeagueUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	League *LeagueRequest `protobuf:"bytes,2,opt,name=league,proto3" json:"league,omitempty"`
}

func (x *LeagueUpdateRequest) Reset() {
	*x = LeagueUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeagueUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeagueUpdateRequest) ProtoMessage() {}

func (x *LeagueUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeagueUpdateRequest.ProtoReflect.Descriptor instead.
func (*LeagueUpdateRequest) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{5}
}

func (x *LeagueUpdateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LeagueUpdateRequest) GetLeague() *LeagueRequest {
	if x != nil {
		return x.League
	}
	return nil
}

type LeagueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error    string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	LeagueId string `protobuf:"bytes,3,opt,name=leagueId,proto3" json:"leagueId,omitempty"`
}

func (x *LeagueResponse) Reset() {
	*x = LeagueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeagueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeagueResponse) ProtoMessage() {}

func (x *LeagueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeagueResponse.ProtoReflect.Descriptor instead.
func (*LeagueResponse) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{6}
}

func (x *LeagueResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *LeagueResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *LeagueResponse) GetLeagueId() string {
	if x != nil {
		return x.LeagueId
	}
	return ""
}

// get all leagues
type GetLeaguesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetLeaguesRequest) Reset() {
	*x = GetLeaguesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLeaguesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeaguesRequest) ProtoMessage() {}

func (x *GetLeaguesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeaguesRequest.ProtoReflect.Descriptor instead.
func (*GetLeaguesRequest) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{7}
}

type GetLeaguesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64     `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string    `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Result []*League `protobuf:"bytes,3,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *GetLeaguesResponse) Reset() {
	*x = GetLeaguesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLeaguesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeaguesResponse) ProtoMessage() {}

func (x *GetLeaguesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeaguesResponse.ProtoReflect.Descriptor instead.
func (*GetLeaguesResponse) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{8}
}

func (x *GetLeaguesResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetLeaguesResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *GetLeaguesResponse) GetResult() []*League {
	if x != nil {
		return x.Result
	}
	return nil
}

// get single league
type GetLeagueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeagueId string `protobuf:"bytes,1,opt,name=leagueId,proto3" json:"leagueId,omitempty"`
}

func (x *GetLeagueRequest) Reset() {
	*x = GetLeagueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLeagueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeagueRequest) ProtoMessage() {}

func (x *GetLeagueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeagueRequest.ProtoReflect.Descriptor instead.
func (*GetLeagueRequest) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{9}
}

func (x *GetLeagueRequest) GetLeagueId() string {
	if x != nil {
		return x.LeagueId
	}
	return ""
}

type GetLeagueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string  `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Result *League `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetLeagueResponse) Reset() {
	*x = GetLeagueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLeagueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeagueResponse) ProtoMessage() {}

func (x *GetLeagueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeagueResponse.ProtoReflect.Descriptor instead.
func (*GetLeagueResponse) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{10}
}

func (x *GetLeagueResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetLeagueResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *GetLeagueResponse) GetResult() *League {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetLeagueFranchisesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64        `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string       `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Result []*Franchise `protobuf:"bytes,3,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *GetLeagueFranchisesResponse) Reset() {
	*x = GetLeagueFranchisesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLeagueFranchisesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeagueFranchisesResponse) ProtoMessage() {}

func (x *GetLeagueFranchisesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeagueFranchisesResponse.ProtoReflect.Descriptor instead.
func (*GetLeagueFranchisesResponse) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{11}
}

func (x *GetLeagueFranchisesResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetLeagueFranchisesResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *GetLeagueFranchisesResponse) GetResult() []*Franchise {
	if x != nil {
		return x.Result
	}
	return nil
}

// get all leagues an associated franchises
type GetLeagueFranchisePairsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *GetLeagueFranchisePairsRequest) Reset() {
	*x = GetLeagueFranchisePairsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLeagueFranchisePairsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeagueFranchisePairsRequest) ProtoMessage() {}

func (x *GetLeagueFranchisePairsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeagueFranchisePairsRequest.ProtoReflect.Descriptor instead.
func (*GetLeagueFranchisePairsRequest) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{12}
}

func (x *GetLeagueFranchisePairsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type LeagueFranchisePair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeagueID    string `protobuf:"bytes,1,opt,name=LeagueID,proto3" json:"LeagueID,omitempty"`
	FranchiseID string `protobuf:"bytes,2,opt,name=FranchiseID,proto3" json:"FranchiseID,omitempty"`
}

func (x *LeagueFranchisePair) Reset() {
	*x = LeagueFranchisePair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeagueFranchisePair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeagueFranchisePair) ProtoMessage() {}

func (x *LeagueFranchisePair) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeagueFranchisePair.ProtoReflect.Descriptor instead.
func (*LeagueFranchisePair) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{13}
}

func (x *LeagueFranchisePair) GetLeagueID() string {
	if x != nil {
		return x.LeagueID
	}
	return ""
}

func (x *LeagueFranchisePair) GetFranchiseID() string {
	if x != nil {
		return x.FranchiseID
	}
	return ""
}

type GetLeagueFranchisePairsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64                  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Result []*LeagueFranchisePair `protobuf:"bytes,3,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *GetLeagueFranchisePairsResponse) Reset() {
	*x = GetLeagueFranchisePairsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLeagueFranchisePairsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeagueFranchisePairsResponse) ProtoMessage() {}

func (x *GetLeagueFranchisePairsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeagueFranchisePairsResponse.ProtoReflect.Descriptor instead.
func (*GetLeagueFranchisePairsResponse) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{14}
}

func (x *GetLeagueFranchisePairsResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetLeagueFranchisePairsResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *GetLeagueFranchisePairsResponse) GetResult() []*LeagueFranchisePair {
	if x != nil {
		return x.Result
	}
	return nil
}

// create franchise
type FranchiseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	OwnerID        string `protobuf:"bytes,2,opt,name=OwnerID,proto3" json:"OwnerID,omitempty"`
	OwnerName      string `protobuf:"bytes,3,opt,name=OwnerName,proto3" json:"OwnerName,omitempty"`
	FoundationYear string `protobuf:"bytes,4,opt,name=FoundationYear,proto3" json:"FoundationYear,omitempty"`
	LeagueId       string `protobuf:"bytes,5,opt,name=LeagueId,proto3" json:"LeagueId,omitempty"`
}

func (x *FranchiseRequest) Reset() {
	*x = FranchiseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FranchiseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FranchiseRequest) ProtoMessage() {}

func (x *FranchiseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FranchiseRequest.ProtoReflect.Descriptor instead.
func (*FranchiseRequest) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{15}
}

func (x *FranchiseRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FranchiseRequest) GetOwnerID() string {
	if x != nil {
		return x.OwnerID
	}
	return ""
}

func (x *FranchiseRequest) GetOwnerName() string {
	if x != nil {
		return x.OwnerName
	}
	return ""
}

func (x *FranchiseRequest) GetFoundationYear() string {
	if x != nil {
		return x.FoundationYear
	}
	return ""
}

func (x *FranchiseRequest) GetLeagueId() string {
	if x != nil {
		return x.LeagueId
	}
	return ""
}

type FranchiseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error       string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	FranchiseId string `protobuf:"bytes,3,opt,name=FranchiseId,proto3" json:"FranchiseId,omitempty"`
}

func (x *FranchiseResponse) Reset() {
	*x = FranchiseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FranchiseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FranchiseResponse) ProtoMessage() {}

func (x *FranchiseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FranchiseResponse.ProtoReflect.Descriptor instead.
func (*FranchiseResponse) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{16}
}

func (x *FranchiseResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *FranchiseResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *FranchiseResponse) GetFranchiseId() string {
	if x != nil {
		return x.FranchiseId
	}
	return ""
}

// get single league
type GetFranchiseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FranchiseId string `protobuf:"bytes,1,opt,name=FranchiseId,proto3" json:"FranchiseId,omitempty"`
}

func (x *GetFranchiseRequest) Reset() {
	*x = GetFranchiseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFranchiseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFranchiseRequest) ProtoMessage() {}

func (x *GetFranchiseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFranchiseRequest.ProtoReflect.Descriptor instead.
func (*GetFranchiseRequest) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{17}
}

func (x *GetFranchiseRequest) GetFranchiseId() string {
	if x != nil {
		return x.FranchiseId
	}
	return ""
}

type GetFranchiseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64      `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string     `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Result *Franchise `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetFranchiseResponse) Reset() {
	*x = GetFranchiseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFranchiseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFranchiseResponse) ProtoMessage() {}

func (x *GetFranchiseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFranchiseResponse.ProtoReflect.Descriptor instead.
func (*GetFranchiseResponse) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{18}
}

func (x *GetFranchiseResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetFranchiseResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *GetFranchiseResponse) GetResult() *Franchise {
	if x != nil {
		return x.Result
	}
	return nil
}

type CreateProspectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prospect *Prospect `protobuf:"bytes,1,opt,name=prospect,proto3" json:"prospect,omitempty"`
}

func (x *CreateProspectRequest) Reset() {
	*x = CreateProspectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProspectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProspectRequest) ProtoMessage() {}

func (x *CreateProspectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProspectRequest.ProtoReflect.Descriptor instead.
func (*CreateProspectRequest) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{19}
}

func (x *CreateProspectRequest) GetProspect() *Prospect {
	if x != nil {
		return x.Prospect
	}
	return nil
}

type CreateProspectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error      string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	ProspectID string `protobuf:"bytes,3,opt,name=prospectID,proto3" json:"prospectID,omitempty"`
}

func (x *CreateProspectResponse) Reset() {
	*x = CreateProspectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProspectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProspectResponse) ProtoMessage() {}

func (x *CreateProspectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProspectResponse.ProtoReflect.Descriptor instead.
func (*CreateProspectResponse) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{20}
}

func (x *CreateProspectResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreateProspectResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *CreateProspectResponse) GetProspectID() string {
	if x != nil {
		return x.ProspectID
	}
	return ""
}

type CreateUndraftedProspectsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prospects []*Prospect `protobuf:"bytes,1,rep,name=prospects,proto3" json:"prospects,omitempty"`
}

func (x *CreateUndraftedProspectsRequest) Reset() {
	*x = CreateUndraftedProspectsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUndraftedProspectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUndraftedProspectsRequest) ProtoMessage() {}

func (x *CreateUndraftedProspectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUndraftedProspectsRequest.ProtoReflect.Descriptor instead.
func (*CreateUndraftedProspectsRequest) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{21}
}

func (x *CreateUndraftedProspectsRequest) GetProspects() []*Prospect {
	if x != nil {
		return x.Prospects
	}
	return nil
}

type CreateUndraftedProspectsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      int64    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error       string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	ProspectIds []string `protobuf:"bytes,3,rep,name=prospectIds,proto3" json:"prospectIds,omitempty"`
}

func (x *CreateUndraftedProspectsResponse) Reset() {
	*x = CreateUndraftedProspectsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUndraftedProspectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUndraftedProspectsResponse) ProtoMessage() {}

func (x *CreateUndraftedProspectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUndraftedProspectsResponse.ProtoReflect.Descriptor instead.
func (*CreateUndraftedProspectsResponse) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{22}
}

func (x *CreateUndraftedProspectsResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreateUndraftedProspectsResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *CreateUndraftedProspectsResponse) GetProspectIds() []string {
	if x != nil {
		return x.ProspectIds
	}
	return nil
}

var File_service_pb_fantasy_proto protoreflect.FileDescriptor

var file_service_pb_fantasy_proto_rawDesc = []byte{
	0x0a, 0x18, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x62, 0x2f, 0x66, 0x61, 0x6e,
	0x74, 0x61, 0x73, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x66, 0x61, 0x6e, 0x74,
	0x61, 0x73, 0x79, 0x22, 0xaa, 0x03, 0x0a, 0x06, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14,
	0x0a, 0x05, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x44, 0x12, 0x22,
	0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26,
	0x0a, 0x0e, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x65, 0x61, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x59, 0x65, 0x61, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x4d, 0x61, 0x78, 0x46, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x4d,
	0x61, 0x78, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c,
	0x4d, 0x61, 0x78, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x4d, 0x61, 0x78, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73,
	0x12, 0x2c, 0x0a, 0x11, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x47,
	0x6f, 0x61, 0x6c, 0x69, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x44, 0x72, 0x61,
	0x66, 0x74, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x47, 0x6f, 0x61, 0x6c, 0x69, 0x65, 0x12, 0x2c,
	0x0a, 0x11, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x53, 0x6b, 0x61,
	0x74, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x44, 0x72, 0x61, 0x66, 0x74,
	0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x53, 0x6b, 0x61, 0x74, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x0a,
	0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e, 0x46, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x69, 0x73, 0x65, 0x52, 0x0a, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x73,
	0x22, 0xdc, 0x01, 0x0a, 0x09, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x46, 0x6f,
	0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x65, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x65,
	0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x44, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x44, 0x12, 0x2f,
	0x0a, 0x09, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x22,
	0xe4, 0x01, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b,
	0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x50, 0x69, 0x63, 0x6b, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x50, 0x69, 0x63, 0x6b, 0x49, 0x44, 0x22, 0xcc, 0x01, 0x0a, 0x04, 0x50, 0x69, 0x63, 0x6b, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12,
	0x1c, 0x0a, 0x09, 0x44, 0x72, 0x61, 0x66, 0x74, 0x59, 0x65, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x44, 0x72, 0x61, 0x66, 0x74, 0x59, 0x65, 0x61, 0x72, 0x12, 0x1e, 0x0a,
	0x0a, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x2a, 0x0a,
	0x10, 0x44, 0x72, 0x61, 0x66, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x4f, 0x76, 0x65, 0x72, 0x61, 0x6c,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x44, 0x72, 0x61, 0x66, 0x74, 0x50, 0x69,
	0x63, 0x6b, 0x4f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x12, 0x2a, 0x0a, 0x10, 0x44, 0x72, 0x61,
	0x66, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x49, 0x6e, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x44, 0x72, 0x61, 0x66, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x49, 0x6e,
	0x52, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63,
	0x74, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x72, 0x6f, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x49, 0x44, 0x22, 0xed, 0x02, 0x0a, 0x0d, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x46, 0x6f, 0x75, 0x6e, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x65, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x65, 0x61, 0x72, 0x12,
	0x24, 0x0a, 0x0d, 0x4d, 0x61, 0x78, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x4d, 0x61, 0x78, 0x46, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x69, 0x73, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x4d, 0x61, 0x78, 0x50, 0x72, 0x6f, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x4d, 0x61, 0x78,
	0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x44, 0x72, 0x61,
	0x66, 0x74, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x47, 0x6f, 0x61, 0x6c, 0x69, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x69, 0x67, 0x68, 0x74,
	0x73, 0x47, 0x6f, 0x61, 0x6c, 0x69, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x44, 0x72, 0x61, 0x66, 0x74,
	0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x53, 0x6b, 0x61, 0x74, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x11, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x53,
	0x6b, 0x61, 0x74, 0x65, 0x72, 0x22, 0x55, 0x0a, 0x13, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x06,
	0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66,
	0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x06, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x22, 0x5a, 0x0a, 0x0e,
	0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4c,
	0x65, 0x61, 0x67, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6b, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x27, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e, 0x4c, 0x65, 0x61, 0x67,
	0x75, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x2e, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x64, 0x22, 0x6a, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x27, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x77, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61,
	0x67, 0x75, 0x65, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e, 0x46, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x38, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x46, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x69, 0x73, 0x65, 0x50, 0x61, 0x69, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x13, 0x4c, 0x65, 0x61,
	0x67, 0x75, 0x65, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x50, 0x61, 0x69, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b,
	0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x49, 0x44, 0x22, 0x85,
	0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x46, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x69, 0x73, 0x65, 0x50, 0x61, 0x69, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x34, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e, 0x4c, 0x65, 0x61, 0x67, 0x75,
	0x65, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x50, 0x61, 0x69, 0x72, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xa2, 0x01, 0x0a, 0x10, 0x46, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x69, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x46, 0x6f, 0x75, 0x6e, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x65, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x65, 0x61, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x64, 0x22, 0x63, 0x0a, 0x11, 0x46,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x20,
	0x0a, 0x0b, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x49, 0x64,
	0x22, 0x37, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x46, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x69, 0x73, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x46, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x49, 0x64, 0x22, 0x70, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x2a, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x69, 0x73, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x46, 0x0a, 0x15, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79,
	0x2e, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x22, 0x66, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x49, 0x44, 0x22, 0x52, 0x0a, 0x1f, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x64, 0x72, 0x61, 0x66, 0x74, 0x65, 0x64, 0x50, 0x72,
	0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f,
	0x0a, 0x09, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x22,
	0x72, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x64, 0x72, 0x61, 0x66, 0x74,
	0x65, 0x64, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x73, 0x32, 0xd8, 0x06, 0x0a, 0x0e, 0x46, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x12, 0x16, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79,
	0x2e, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17,
	0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0a, 0x47, 0x65, 0x74,
	0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x73, 0x12, 0x1a, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73,
	0x79, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e, 0x47, 0x65,
	0x74, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x44, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x12,
	0x19, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61,
	0x67, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x66, 0x61, 0x6e,
	0x74, 0x61, 0x73, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x12, 0x1c, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61,
	0x73, 0x79, 0x2e, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79,
	0x2e, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x58, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x46, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x73, 0x12, 0x19, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61,
	0x73, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e, 0x47, 0x65,
	0x74, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73,
	0x65, 0x50, 0x61, 0x69, 0x72, 0x73, 0x12, 0x27, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79,
	0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x69, 0x73, 0x65, 0x50, 0x61, 0x69, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x28, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61,
	0x67, 0x75, 0x65, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x50, 0x61, 0x69, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0f, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x12, 0x19,
	0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x66, 0x61, 0x6e, 0x74,
	0x61, 0x73, 0x79, 0x2e, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x46, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x12, 0x1c, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73,
	0x79, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e,
	0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x55, 0x6e, 0x64, 0x72, 0x61, 0x66, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63,
	0x74, 0x73, 0x12, 0x28, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x55, 0x6e, 0x64, 0x72, 0x61, 0x66, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x66,
	0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x64,
	0x72, 0x61, 0x66, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x12, 0x1e, 0x2e, 0x66, 0x61,
	0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x66, 0x61,
	0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0e,
	0x5a, 0x0c, 0x2e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_service_pb_fantasy_proto_rawDescOnce sync.Once
	file_service_pb_fantasy_proto_rawDescData = file_service_pb_fantasy_proto_rawDesc
)

func file_service_pb_fantasy_proto_rawDescGZIP() []byte {
	file_service_pb_fantasy_proto_rawDescOnce.Do(func() {
		file_service_pb_fantasy_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_pb_fantasy_proto_rawDescData)
	})
	return file_service_pb_fantasy_proto_rawDescData
}

var file_service_pb_fantasy_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_service_pb_fantasy_proto_goTypes = []interface{}{
	(*League)(nil),                           // 0: fantasy.League
	(*Franchise)(nil),                        // 1: fantasy.Franchise
	(*Prospect)(nil),                         // 2: fantasy.Prospect
	(*Pick)(nil),                             // 3: fantasy.Pick
	(*LeagueRequest)(nil),                    // 4: fantasy.LeagueRequest
	(*LeagueUpdateRequest)(nil),              // 5: fantasy.LeagueUpdateRequest
	(*LeagueResponse)(nil),                   // 6: fantasy.LeagueResponse
	(*GetLeaguesRequest)(nil),                // 7: fantasy.GetLeaguesRequest
	(*GetLeaguesResponse)(nil),               // 8: fantasy.GetLeaguesResponse
	(*GetLeagueRequest)(nil),                 // 9: fantasy.GetLeagueRequest
	(*GetLeagueResponse)(nil),                // 10: fantasy.GetLeagueResponse
	(*GetLeagueFranchisesResponse)(nil),      // 11: fantasy.GetLeagueFranchisesResponse
	(*GetLeagueFranchisePairsRequest)(nil),   // 12: fantasy.GetLeagueFranchisePairsRequest
	(*LeagueFranchisePair)(nil),              // 13: fantasy.LeagueFranchisePair
	(*GetLeagueFranchisePairsResponse)(nil),  // 14: fantasy.GetLeagueFranchisePairsResponse
	(*FranchiseRequest)(nil),                 // 15: fantasy.FranchiseRequest
	(*FranchiseResponse)(nil),                // 16: fantasy.FranchiseResponse
	(*GetFranchiseRequest)(nil),              // 17: fantasy.GetFranchiseRequest
	(*GetFranchiseResponse)(nil),             // 18: fantasy.GetFranchiseResponse
	(*CreateProspectRequest)(nil),            // 19: fantasy.CreateProspectRequest
	(*CreateProspectResponse)(nil),           // 20: fantasy.CreateProspectResponse
	(*CreateUndraftedProspectsRequest)(nil),  // 21: fantasy.CreateUndraftedProspectsRequest
	(*CreateUndraftedProspectsResponse)(nil), // 22: fantasy.CreateUndraftedProspectsResponse
}
var file_service_pb_fantasy_proto_depIdxs = []int32{
	1,  // 0: fantasy.League.Franchises:type_name -> fantasy.Franchise
	2,  // 1: fantasy.Franchise.Prospects:type_name -> fantasy.Prospect
	4,  // 2: fantasy.LeagueUpdateRequest.league:type_name -> fantasy.LeagueRequest
	0,  // 3: fantasy.GetLeaguesResponse.result:type_name -> fantasy.League
	0,  // 4: fantasy.GetLeagueResponse.result:type_name -> fantasy.League
	1,  // 5: fantasy.GetLeagueFranchisesResponse.result:type_name -> fantasy.Franchise
	13, // 6: fantasy.GetLeagueFranchisePairsResponse.result:type_name -> fantasy.LeagueFranchisePair
	1,  // 7: fantasy.GetFranchiseResponse.result:type_name -> fantasy.Franchise
	2,  // 8: fantasy.CreateProspectRequest.prospect:type_name -> fantasy.Prospect
	2,  // 9: fantasy.CreateUndraftedProspectsRequest.prospects:type_name -> fantasy.Prospect
	4,  // 10: fantasy.FantasyService.CreateLeague:input_type -> fantasy.LeagueRequest
	7,  // 11: fantasy.FantasyService.GetLeagues:input_type -> fantasy.GetLeaguesRequest
	9,  // 12: fantasy.FantasyService.GetLeague:input_type -> fantasy.GetLeagueRequest
	5,  // 13: fantasy.FantasyService.UpdateLeague:input_type -> fantasy.LeagueUpdateRequest
	9,  // 14: fantasy.FantasyService.GetLeagueFranchises:input_type -> fantasy.GetLeagueRequest
	12, // 15: fantasy.FantasyService.GetLeagueFranchisePairs:input_type -> fantasy.GetLeagueFranchisePairsRequest
	15, // 16: fantasy.FantasyService.CreateFranchise:input_type -> fantasy.FranchiseRequest
	17, // 17: fantasy.FantasyService.GetFranchise:input_type -> fantasy.GetFranchiseRequest
	21, // 18: fantasy.FantasyService.CreateUndraftedProspects:input_type -> fantasy.CreateUndraftedProspectsRequest
	19, // 19: fantasy.FantasyService.CreateProspect:input_type -> fantasy.CreateProspectRequest
	6,  // 20: fantasy.FantasyService.CreateLeague:output_type -> fantasy.LeagueResponse
	8,  // 21: fantasy.FantasyService.GetLeagues:output_type -> fantasy.GetLeaguesResponse
	10, // 22: fantasy.FantasyService.GetLeague:output_type -> fantasy.GetLeagueResponse
	6,  // 23: fantasy.FantasyService.UpdateLeague:output_type -> fantasy.LeagueResponse
	11, // 24: fantasy.FantasyService.GetLeagueFranchises:output_type -> fantasy.GetLeagueFranchisesResponse
	14, // 25: fantasy.FantasyService.GetLeagueFranchisePairs:output_type -> fantasy.GetLeagueFranchisePairsResponse
	16, // 26: fantasy.FantasyService.CreateFranchise:output_type -> fantasy.FranchiseResponse
	18, // 27: fantasy.FantasyService.GetFranchise:output_type -> fantasy.GetFranchiseResponse
	22, // 28: fantasy.FantasyService.CreateUndraftedProspects:output_type -> fantasy.CreateUndraftedProspectsResponse
	20, // 29: fantasy.FantasyService.CreateProspect:output_type -> fantasy.CreateProspectResponse
	20, // [20:30] is the sub-list for method output_type
	10, // [10:20] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_service_pb_fantasy_proto_init() }
func file_service_pb_fantasy_proto_init() {
	if File_service_pb_fantasy_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_service_pb_fantasy_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*League); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Franchise); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Prospect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pick); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeagueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeagueUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeagueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLeaguesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLeaguesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLeagueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLeagueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLeagueFranchisesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLeagueFranchisePairsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeagueFranchisePair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLeagueFranchisePairsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FranchiseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FranchiseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFranchiseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFranchiseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProspectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProspectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUndraftedProspectsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUndraftedProspectsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_pb_fantasy_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_pb_fantasy_proto_goTypes,
		DependencyIndexes: file_service_pb_fantasy_proto_depIdxs,
		MessageInfos:      file_service_pb_fantasy_proto_msgTypes,
	}.Build()
	File_service_pb_fantasy_proto = out.File
	file_service_pb_fantasy_proto_rawDesc = nil
	file_service_pb_fantasy_proto_goTypes = nil
	file_service_pb_fantasy_proto_depIdxs = nil
}
