// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.21.9
// source: service/pb/fantasy.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type League struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                string       `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Admin             string       `protobuf:"bytes,2,opt,name=Admin,proto3" json:"Admin,omitempty"`
	AdminID           string       `protobuf:"bytes,3,opt,name=AdminID,proto3" json:"AdminID,omitempty"`
	Commissioner      string       `protobuf:"bytes,4,opt,name=Commissioner,proto3" json:"Commissioner,omitempty"`
	CommissionerID    string       `protobuf:"bytes,5,opt,name=CommissionerID,proto3" json:"CommissionerID,omitempty"`
	Name              string       `protobuf:"bytes,6,opt,name=Name,proto3" json:"Name,omitempty"`
	FoundationYear    string       `protobuf:"bytes,7,opt,name=FoundationYear,proto3" json:"FoundationYear,omitempty"`
	MaxFranchises     int32        `protobuf:"varint,8,opt,name=MaxFranchises,proto3" json:"MaxFranchises,omitempty"`
	MaxProspects      int32        `protobuf:"varint,9,opt,name=MaxProspects,proto3" json:"MaxProspects,omitempty"`
	DraftRightsGoalie int32        `protobuf:"varint,10,opt,name=DraftRightsGoalie,proto3" json:"DraftRightsGoalie,omitempty"`
	DraftRightsSkater int32        `protobuf:"varint,11,opt,name=DraftRightsSkater,proto3" json:"DraftRightsSkater,omitempty"`
	DraftRounds       int32        `protobuf:"varint,12,opt,name=DraftRounds,proto3" json:"DraftRounds,omitempty"`
	Franchises        []*Franchise `protobuf:"bytes,13,rep,name=Franchises,proto3" json:"Franchises,omitempty"`
}

func (x *League) Reset() {
	*x = League{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *League) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*League) ProtoMessage() {}

func (x *League) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use League.ProtoReflect.Descriptor instead.
func (*League) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{0}
}

func (x *League) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *League) GetAdmin() string {
	if x != nil {
		return x.Admin
	}
	return ""
}

func (x *League) GetAdminID() string {
	if x != nil {
		return x.AdminID
	}
	return ""
}

func (x *League) GetCommissioner() string {
	if x != nil {
		return x.Commissioner
	}
	return ""
}

func (x *League) GetCommissionerID() string {
	if x != nil {
		return x.CommissionerID
	}
	return ""
}

func (x *League) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *League) GetFoundationYear() string {
	if x != nil {
		return x.FoundationYear
	}
	return ""
}

func (x *League) GetMaxFranchises() int32 {
	if x != nil {
		return x.MaxFranchises
	}
	return 0
}

func (x *League) GetMaxProspects() int32 {
	if x != nil {
		return x.MaxProspects
	}
	return 0
}

func (x *League) GetDraftRightsGoalie() int32 {
	if x != nil {
		return x.DraftRightsGoalie
	}
	return 0
}

func (x *League) GetDraftRightsSkater() int32 {
	if x != nil {
		return x.DraftRightsSkater
	}
	return 0
}

func (x *League) GetDraftRounds() int32 {
	if x != nil {
		return x.DraftRounds
	}
	return 0
}

func (x *League) GetFranchises() []*Franchise {
	if x != nil {
		return x.Franchises
	}
	return nil
}

type Franchise struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID             string      `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name           string      `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	OwnerID        string      `protobuf:"bytes,3,opt,name=OwnerID,proto3" json:"OwnerID,omitempty"`
	OwnerName      string      `protobuf:"bytes,4,opt,name=OwnerName,proto3" json:"OwnerName,omitempty"`
	FoundationYear string      `protobuf:"bytes,5,opt,name=FoundationYear,proto3" json:"FoundationYear,omitempty"`
	LeagueID       string      `protobuf:"bytes,6,opt,name=LeagueID,proto3" json:"LeagueID,omitempty"`
	Prospects      []*Prospect `protobuf:"bytes,7,rep,name=Prospects,proto3" json:"Prospects,omitempty"`
}

func (x *Franchise) Reset() {
	*x = Franchise{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Franchise) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Franchise) ProtoMessage() {}

func (x *Franchise) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Franchise.ProtoReflect.Descriptor instead.
func (*Franchise) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{1}
}

func (x *Franchise) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Franchise) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Franchise) GetOwnerID() string {
	if x != nil {
		return x.OwnerID
	}
	return ""
}

func (x *Franchise) GetOwnerName() string {
	if x != nil {
		return x.OwnerName
	}
	return ""
}

func (x *Franchise) GetFoundationYear() string {
	if x != nil {
		return x.FoundationYear
	}
	return ""
}

func (x *Franchise) GetLeagueID() string {
	if x != nil {
		return x.LeagueID
	}
	return ""
}

func (x *Franchise) GetProspects() []*Prospect {
	if x != nil {
		return x.Prospects
	}
	return nil
}

type Prospect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                  string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	FullName            string `protobuf:"bytes,2,opt,name=FullName,proto3" json:"FullName,omitempty"`
	FirstName           string `protobuf:"bytes,3,opt,name=FirstName,proto3" json:"FirstName,omitempty"`
	LastName            string `protobuf:"bytes,4,opt,name=LastName,proto3" json:"LastName,omitempty"`
	NhlTeam             string `protobuf:"bytes,5,opt,name=NhlTeam,proto3" json:"NhlTeam,omitempty"`
	NhlDraftYear        string `protobuf:"bytes,6,opt,name=NhlDraftYear,proto3" json:"NhlDraftYear,omitempty"`
	Birthdate           string `protobuf:"bytes,7,opt,name=Birthdate,proto3" json:"Birthdate,omitempty"`
	Height              string `protobuf:"bytes,8,opt,name=Height,proto3" json:"Height,omitempty"`
	Weight              string `protobuf:"bytes,9,opt,name=Weight,proto3" json:"Weight,omitempty"`
	NhlDraftRound       string `protobuf:"bytes,10,opt,name=NhlDraftRound,proto3" json:"NhlDraftRound,omitempty"`
	NhlDraftPickOverall string `protobuf:"bytes,11,opt,name=NhlDraftPickOverall,proto3" json:"NhlDraftPickOverall,omitempty"`
	NhlPickInRound      string `protobuf:"bytes,12,opt,name=NhlPickInRound,proto3" json:"NhlPickInRound,omitempty"`
	PositionCode        string `protobuf:"bytes,13,opt,name=PositionCode,proto3" json:"PositionCode,omitempty"`
	LeagueID            string `protobuf:"bytes,14,opt,name=LeagueID,proto3" json:"LeagueID,omitempty"`
	FranchiseID         string `protobuf:"bytes,15,opt,name=FranchiseID,proto3" json:"FranchiseID,omitempty"`
	Pick                *Pick  `protobuf:"bytes,16,opt,name=Pick,proto3" json:"Pick,omitempty"`
}

func (x *Prospect) Reset() {
	*x = Prospect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Prospect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Prospect) ProtoMessage() {}

func (x *Prospect) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Prospect.ProtoReflect.Descriptor instead.
func (*Prospect) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{2}
}

func (x *Prospect) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Prospect) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *Prospect) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *Prospect) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *Prospect) GetNhlTeam() string {
	if x != nil {
		return x.NhlTeam
	}
	return ""
}

func (x *Prospect) GetNhlDraftYear() string {
	if x != nil {
		return x.NhlDraftYear
	}
	return ""
}

func (x *Prospect) GetBirthdate() string {
	if x != nil {
		return x.Birthdate
	}
	return ""
}

func (x *Prospect) GetHeight() string {
	if x != nil {
		return x.Height
	}
	return ""
}

func (x *Prospect) GetWeight() string {
	if x != nil {
		return x.Weight
	}
	return ""
}

func (x *Prospect) GetNhlDraftRound() string {
	if x != nil {
		return x.NhlDraftRound
	}
	return ""
}

func (x *Prospect) GetNhlDraftPickOverall() string {
	if x != nil {
		return x.NhlDraftPickOverall
	}
	return ""
}

func (x *Prospect) GetNhlPickInRound() string {
	if x != nil {
		return x.NhlPickInRound
	}
	return ""
}

func (x *Prospect) GetPositionCode() string {
	if x != nil {
		return x.PositionCode
	}
	return ""
}

func (x *Prospect) GetLeagueID() string {
	if x != nil {
		return x.LeagueID
	}
	return ""
}

func (x *Prospect) GetFranchiseID() string {
	if x != nil {
		return x.FranchiseID
	}
	return ""
}

func (x *Prospect) GetPick() *Pick {
	if x != nil {
		return x.Pick
	}
	return nil
}

type Pick struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID               string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	DraftYear        string `protobuf:"bytes,2,opt,name=DraftYear,proto3" json:"DraftYear,omitempty"`
	DraftRound       string `protobuf:"bytes,3,opt,name=DraftRound,proto3" json:"DraftRound,omitempty"`
	DraftPickOverall string `protobuf:"bytes,4,opt,name=DraftPickOverall,proto3" json:"DraftPickOverall,omitempty"`
	DraftPickInRound string `protobuf:"bytes,5,opt,name=DraftPickInRound,proto3" json:"DraftPickInRound,omitempty"`
	ProspectID       string `protobuf:"bytes,6,opt,name=ProspectID,proto3" json:"ProspectID,omitempty"`
	OwnerID          string `protobuf:"bytes,7,opt,name=OwnerID,proto3" json:"OwnerID,omitempty"`
	OwnerName        string `protobuf:"bytes,8,opt,name=OwnerName,proto3" json:"OwnerName,omitempty"`
	LastOwnerID      string `protobuf:"bytes,9,opt,name=LastOwnerID,proto3" json:"LastOwnerID,omitempty"`
	LastOwnerName    string `protobuf:"bytes,10,opt,name=LastOwnerName,proto3" json:"LastOwnerName,omitempty"`
	OriginID         string `protobuf:"bytes,11,opt,name=OriginID,proto3" json:"OriginID,omitempty"`
	OriginName       string `protobuf:"bytes,12,opt,name=OriginName,proto3" json:"OriginName,omitempty"`
}

func (x *Pick) Reset() {
	*x = Pick{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pick) ProtoMessage() {}

func (x *Pick) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pick.ProtoReflect.Descriptor instead.
func (*Pick) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{3}
}

func (x *Pick) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Pick) GetDraftYear() string {
	if x != nil {
		return x.DraftYear
	}
	return ""
}

func (x *Pick) GetDraftRound() string {
	if x != nil {
		return x.DraftRound
	}
	return ""
}

func (x *Pick) GetDraftPickOverall() string {
	if x != nil {
		return x.DraftPickOverall
	}
	return ""
}

func (x *Pick) GetDraftPickInRound() string {
	if x != nil {
		return x.DraftPickInRound
	}
	return ""
}

func (x *Pick) GetProspectID() string {
	if x != nil {
		return x.ProspectID
	}
	return ""
}

func (x *Pick) GetOwnerID() string {
	if x != nil {
		return x.OwnerID
	}
	return ""
}

func (x *Pick) GetOwnerName() string {
	if x != nil {
		return x.OwnerName
	}
	return ""
}

func (x *Pick) GetLastOwnerID() string {
	if x != nil {
		return x.LastOwnerID
	}
	return ""
}

func (x *Pick) GetLastOwnerName() string {
	if x != nil {
		return x.LastOwnerName
	}
	return ""
}

func (x *Pick) GetOriginID() string {
	if x != nil {
		return x.OriginID
	}
	return ""
}

func (x *Pick) GetOriginName() string {
	if x != nil {
		return x.OriginName
	}
	return ""
}

type DraftPick struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DraftYear        string `protobuf:"bytes,2,opt,name=DraftYear,proto3" json:"DraftYear,omitempty"`
	DraftRound       string `protobuf:"bytes,3,opt,name=DraftRound,proto3" json:"DraftRound,omitempty"`
	DraftPickOverall string `protobuf:"bytes,4,opt,name=DraftPickOverall,proto3" json:"DraftPickOverall,omitempty"`
	DraftPickInRound string `protobuf:"bytes,5,opt,name=DraftPickInRound,proto3" json:"DraftPickInRound,omitempty"`
}

func (x *DraftPick) Reset() {
	*x = DraftPick{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DraftPick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DraftPick) ProtoMessage() {}

func (x *DraftPick) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DraftPick.ProtoReflect.Descriptor instead.
func (*DraftPick) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{4}
}

func (x *DraftPick) GetDraftYear() string {
	if x != nil {
		return x.DraftYear
	}
	return ""
}

func (x *DraftPick) GetDraftRound() string {
	if x != nil {
		return x.DraftRound
	}
	return ""
}

func (x *DraftPick) GetDraftPickOverall() string {
	if x != nil {
		return x.DraftPickOverall
	}
	return ""
}

func (x *DraftPick) GetDraftPickInRound() string {
	if x != nil {
		return x.DraftPickInRound
	}
	return ""
}

type DefaultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *DefaultResponse) Reset() {
	*x = DefaultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DefaultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DefaultResponse) ProtoMessage() {}

func (x *DefaultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DefaultResponse.ProtoReflect.Descriptor instead.
func (*DefaultResponse) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{5}
}

func (x *DefaultResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DefaultResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// create
type LeagueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Admin             string `protobuf:"bytes,1,opt,name=Admin,proto3" json:"Admin,omitempty"`
	AdminID           string `protobuf:"bytes,2,opt,name=AdminID,proto3" json:"AdminID,omitempty"`
	Commissioner      string `protobuf:"bytes,3,opt,name=Commissioner,proto3" json:"Commissioner,omitempty"`
	CommissionerID    string `protobuf:"bytes,4,opt,name=CommissionerID,proto3" json:"CommissionerID,omitempty"`
	Name              string `protobuf:"bytes,5,opt,name=Name,proto3" json:"Name,omitempty"`
	FoundationYear    string `protobuf:"bytes,6,opt,name=FoundationYear,proto3" json:"FoundationYear,omitempty"`
	MaxFranchises     int32  `protobuf:"varint,7,opt,name=MaxFranchises,proto3" json:"MaxFranchises,omitempty"`
	MaxProspects      int32  `protobuf:"varint,8,opt,name=MaxProspects,proto3" json:"MaxProspects,omitempty"`
	DraftRightsGoalie int32  `protobuf:"varint,9,opt,name=DraftRightsGoalie,proto3" json:"DraftRightsGoalie,omitempty"`
	DraftRightsSkater int32  `protobuf:"varint,10,opt,name=DraftRightsSkater,proto3" json:"DraftRightsSkater,omitempty"`
	DraftRounds       int32  `protobuf:"varint,11,opt,name=DraftRounds,proto3" json:"DraftRounds,omitempty"`
}

func (x *LeagueRequest) Reset() {
	*x = LeagueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeagueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeagueRequest) ProtoMessage() {}

func (x *LeagueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeagueRequest.ProtoReflect.Descriptor instead.
func (*LeagueRequest) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{6}
}

func (x *LeagueRequest) GetAdmin() string {
	if x != nil {
		return x.Admin
	}
	return ""
}

func (x *LeagueRequest) GetAdminID() string {
	if x != nil {
		return x.AdminID
	}
	return ""
}

func (x *LeagueRequest) GetCommissioner() string {
	if x != nil {
		return x.Commissioner
	}
	return ""
}

func (x *LeagueRequest) GetCommissionerID() string {
	if x != nil {
		return x.CommissionerID
	}
	return ""
}

func (x *LeagueRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LeagueRequest) GetFoundationYear() string {
	if x != nil {
		return x.FoundationYear
	}
	return ""
}

func (x *LeagueRequest) GetMaxFranchises() int32 {
	if x != nil {
		return x.MaxFranchises
	}
	return 0
}

func (x *LeagueRequest) GetMaxProspects() int32 {
	if x != nil {
		return x.MaxProspects
	}
	return 0
}

func (x *LeagueRequest) GetDraftRightsGoalie() int32 {
	if x != nil {
		return x.DraftRightsGoalie
	}
	return 0
}

func (x *LeagueRequest) GetDraftRightsSkater() int32 {
	if x != nil {
		return x.DraftRightsSkater
	}
	return 0
}

func (x *LeagueRequest) GetDraftRounds() int32 {
	if x != nil {
		return x.DraftRounds
	}
	return 0
}

// update
type LeagueUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	League *LeagueRequest `protobuf:"bytes,2,opt,name=league,proto3" json:"league,omitempty"`
}

func (x *LeagueUpdateRequest) Reset() {
	*x = LeagueUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeagueUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeagueUpdateRequest) ProtoMessage() {}

func (x *LeagueUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeagueUpdateRequest.ProtoReflect.Descriptor instead.
func (*LeagueUpdateRequest) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{7}
}

func (x *LeagueUpdateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LeagueUpdateRequest) GetLeague() *LeagueRequest {
	if x != nil {
		return x.League
	}
	return nil
}

type LeagueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error    string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	LeagueId string `protobuf:"bytes,3,opt,name=leagueId,proto3" json:"leagueId,omitempty"`
}

func (x *LeagueResponse) Reset() {
	*x = LeagueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeagueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeagueResponse) ProtoMessage() {}

func (x *LeagueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeagueResponse.ProtoReflect.Descriptor instead.
func (*LeagueResponse) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{8}
}

func (x *LeagueResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *LeagueResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *LeagueResponse) GetLeagueId() string {
	if x != nil {
		return x.LeagueId
	}
	return ""
}

// get all leagues
type GetLeaguesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetLeaguesRequest) Reset() {
	*x = GetLeaguesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLeaguesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeaguesRequest) ProtoMessage() {}

func (x *GetLeaguesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeaguesRequest.ProtoReflect.Descriptor instead.
func (*GetLeaguesRequest) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{9}
}

type GetLeaguesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64     `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string    `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Result []*League `protobuf:"bytes,3,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *GetLeaguesResponse) Reset() {
	*x = GetLeaguesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLeaguesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeaguesResponse) ProtoMessage() {}

func (x *GetLeaguesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeaguesResponse.ProtoReflect.Descriptor instead.
func (*GetLeaguesResponse) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{10}
}

func (x *GetLeaguesResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetLeaguesResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *GetLeaguesResponse) GetResult() []*League {
	if x != nil {
		return x.Result
	}
	return nil
}

// get single league
type GetLeagueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeagueId string `protobuf:"bytes,1,opt,name=leagueId,proto3" json:"leagueId,omitempty"`
}

func (x *GetLeagueRequest) Reset() {
	*x = GetLeagueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLeagueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeagueRequest) ProtoMessage() {}

func (x *GetLeagueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeagueRequest.ProtoReflect.Descriptor instead.
func (*GetLeagueRequest) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{11}
}

func (x *GetLeagueRequest) GetLeagueId() string {
	if x != nil {
		return x.LeagueId
	}
	return ""
}

type GetLeagueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string  `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Result *League `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetLeagueResponse) Reset() {
	*x = GetLeagueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLeagueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeagueResponse) ProtoMessage() {}

func (x *GetLeagueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeagueResponse.ProtoReflect.Descriptor instead.
func (*GetLeagueResponse) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{12}
}

func (x *GetLeagueResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetLeagueResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *GetLeagueResponse) GetResult() *League {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetLeagueFranchisesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64        `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string       `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Result []*Franchise `protobuf:"bytes,3,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *GetLeagueFranchisesResponse) Reset() {
	*x = GetLeagueFranchisesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLeagueFranchisesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeagueFranchisesResponse) ProtoMessage() {}

func (x *GetLeagueFranchisesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeagueFranchisesResponse.ProtoReflect.Descriptor instead.
func (*GetLeagueFranchisesResponse) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{13}
}

func (x *GetLeagueFranchisesResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetLeagueFranchisesResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *GetLeagueFranchisesResponse) GetResult() []*Franchise {
	if x != nil {
		return x.Result
	}
	return nil
}

// get all leagues an associated franchises
type GetLeagueFranchisePairsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *GetLeagueFranchisePairsRequest) Reset() {
	*x = GetLeagueFranchisePairsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLeagueFranchisePairsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeagueFranchisePairsRequest) ProtoMessage() {}

func (x *GetLeagueFranchisePairsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeagueFranchisePairsRequest.ProtoReflect.Descriptor instead.
func (*GetLeagueFranchisePairsRequest) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{14}
}

func (x *GetLeagueFranchisePairsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type LeagueFranchisePair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeagueID    string `protobuf:"bytes,1,opt,name=LeagueID,proto3" json:"LeagueID,omitempty"`
	FranchiseID string `protobuf:"bytes,2,opt,name=FranchiseID,proto3" json:"FranchiseID,omitempty"`
}

func (x *LeagueFranchisePair) Reset() {
	*x = LeagueFranchisePair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeagueFranchisePair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeagueFranchisePair) ProtoMessage() {}

func (x *LeagueFranchisePair) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeagueFranchisePair.ProtoReflect.Descriptor instead.
func (*LeagueFranchisePair) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{15}
}

func (x *LeagueFranchisePair) GetLeagueID() string {
	if x != nil {
		return x.LeagueID
	}
	return ""
}

func (x *LeagueFranchisePair) GetFranchiseID() string {
	if x != nil {
		return x.FranchiseID
	}
	return ""
}

type GetLeagueFranchisePairsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64                  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Result []*LeagueFranchisePair `protobuf:"bytes,3,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *GetLeagueFranchisePairsResponse) Reset() {
	*x = GetLeagueFranchisePairsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLeagueFranchisePairsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeagueFranchisePairsResponse) ProtoMessage() {}

func (x *GetLeagueFranchisePairsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeagueFranchisePairsResponse.ProtoReflect.Descriptor instead.
func (*GetLeagueFranchisePairsResponse) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{16}
}

func (x *GetLeagueFranchisePairsResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetLeagueFranchisePairsResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *GetLeagueFranchisePairsResponse) GetResult() []*LeagueFranchisePair {
	if x != nil {
		return x.Result
	}
	return nil
}

// create franchise
type FranchiseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	OwnerID        string `protobuf:"bytes,2,opt,name=OwnerID,proto3" json:"OwnerID,omitempty"`
	OwnerName      string `protobuf:"bytes,3,opt,name=OwnerName,proto3" json:"OwnerName,omitempty"`
	FoundationYear string `protobuf:"bytes,4,opt,name=FoundationYear,proto3" json:"FoundationYear,omitempty"`
	LeagueId       string `protobuf:"bytes,5,opt,name=LeagueId,proto3" json:"LeagueId,omitempty"`
}

func (x *FranchiseRequest) Reset() {
	*x = FranchiseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FranchiseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FranchiseRequest) ProtoMessage() {}

func (x *FranchiseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FranchiseRequest.ProtoReflect.Descriptor instead.
func (*FranchiseRequest) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{17}
}

func (x *FranchiseRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FranchiseRequest) GetOwnerID() string {
	if x != nil {
		return x.OwnerID
	}
	return ""
}

func (x *FranchiseRequest) GetOwnerName() string {
	if x != nil {
		return x.OwnerName
	}
	return ""
}

func (x *FranchiseRequest) GetFoundationYear() string {
	if x != nil {
		return x.FoundationYear
	}
	return ""
}

func (x *FranchiseRequest) GetLeagueId() string {
	if x != nil {
		return x.LeagueId
	}
	return ""
}

type FranchiseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error       string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	FranchiseId string `protobuf:"bytes,3,opt,name=FranchiseId,proto3" json:"FranchiseId,omitempty"`
}

func (x *FranchiseResponse) Reset() {
	*x = FranchiseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FranchiseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FranchiseResponse) ProtoMessage() {}

func (x *FranchiseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FranchiseResponse.ProtoReflect.Descriptor instead.
func (*FranchiseResponse) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{18}
}

func (x *FranchiseResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *FranchiseResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *FranchiseResponse) GetFranchiseId() string {
	if x != nil {
		return x.FranchiseId
	}
	return ""
}

// get single league
type GetFranchiseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FranchiseID string `protobuf:"bytes,1,opt,name=FranchiseID,proto3" json:"FranchiseID,omitempty"`
}

func (x *GetFranchiseRequest) Reset() {
	*x = GetFranchiseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFranchiseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFranchiseRequest) ProtoMessage() {}

func (x *GetFranchiseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFranchiseRequest.ProtoReflect.Descriptor instead.
func (*GetFranchiseRequest) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{19}
}

func (x *GetFranchiseRequest) GetFranchiseID() string {
	if x != nil {
		return x.FranchiseID
	}
	return ""
}

type GetFranchiseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64      `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string     `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Result *Franchise `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetFranchiseResponse) Reset() {
	*x = GetFranchiseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFranchiseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFranchiseResponse) ProtoMessage() {}

func (x *GetFranchiseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFranchiseResponse.ProtoReflect.Descriptor instead.
func (*GetFranchiseResponse) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{20}
}

func (x *GetFranchiseResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetFranchiseResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *GetFranchiseResponse) GetResult() *Franchise {
	if x != nil {
		return x.Result
	}
	return nil
}

// Prospects
type CreateProspect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FullName            string `protobuf:"bytes,1,opt,name=fullName,proto3" json:"fullName,omitempty"`
	FirstName           string `protobuf:"bytes,2,opt,name=firstName,proto3" json:"firstName,omitempty"`
	LastName            string `protobuf:"bytes,3,opt,name=lastName,proto3" json:"lastName,omitempty"`
	NhlTeam             string `protobuf:"bytes,4,opt,name=nhlTeam,proto3" json:"nhlTeam,omitempty"`
	Birthdate           string `protobuf:"bytes,5,opt,name=birthdate,proto3" json:"birthdate,omitempty"`
	Height              string `protobuf:"bytes,6,opt,name=height,proto3" json:"height,omitempty"`
	Weight              string `protobuf:"bytes,7,opt,name=weight,proto3" json:"weight,omitempty"`
	DraftYear           string `protobuf:"bytes,8,opt,name=draftYear,proto3" json:"draftYear,omitempty"`
	NhlDraftRound       string `protobuf:"bytes,9,opt,name=nhlDraftRound,proto3" json:"nhlDraftRound,omitempty"`
	NhlDraftPickOverall string `protobuf:"bytes,10,opt,name=nhlDraftPickOverall,proto3" json:"nhlDraftPickOverall,omitempty"`
	NhlDraftPickInRound string `protobuf:"bytes,11,opt,name=nhlDraftPickInRound,proto3" json:"nhlDraftPickInRound,omitempty"`
	PositionCode        string `protobuf:"bytes,12,opt,name=positionCode,proto3" json:"positionCode,omitempty"`
}

func (x *CreateProspect) Reset() {
	*x = CreateProspect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProspect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProspect) ProtoMessage() {}

func (x *CreateProspect) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProspect.ProtoReflect.Descriptor instead.
func (*CreateProspect) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{21}
}

func (x *CreateProspect) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *CreateProspect) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *CreateProspect) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *CreateProspect) GetNhlTeam() string {
	if x != nil {
		return x.NhlTeam
	}
	return ""
}

func (x *CreateProspect) GetBirthdate() string {
	if x != nil {
		return x.Birthdate
	}
	return ""
}

func (x *CreateProspect) GetHeight() string {
	if x != nil {
		return x.Height
	}
	return ""
}

func (x *CreateProspect) GetWeight() string {
	if x != nil {
		return x.Weight
	}
	return ""
}

func (x *CreateProspect) GetDraftYear() string {
	if x != nil {
		return x.DraftYear
	}
	return ""
}

func (x *CreateProspect) GetNhlDraftRound() string {
	if x != nil {
		return x.NhlDraftRound
	}
	return ""
}

func (x *CreateProspect) GetNhlDraftPickOverall() string {
	if x != nil {
		return x.NhlDraftPickOverall
	}
	return ""
}

func (x *CreateProspect) GetNhlDraftPickInRound() string {
	if x != nil {
		return x.NhlDraftPickInRound
	}
	return ""
}

func (x *CreateProspect) GetPositionCode() string {
	if x != nil {
		return x.PositionCode
	}
	return ""
}

type CreateProspectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prospect *Prospect `protobuf:"bytes,1,opt,name=prospect,proto3" json:"prospect,omitempty"`
}

func (x *CreateProspectRequest) Reset() {
	*x = CreateProspectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProspectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProspectRequest) ProtoMessage() {}

func (x *CreateProspectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProspectRequest.ProtoReflect.Descriptor instead.
func (*CreateProspectRequest) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{22}
}

func (x *CreateProspectRequest) GetProspect() *Prospect {
	if x != nil {
		return x.Prospect
	}
	return nil
}

type CreateProspectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error      string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	ProspectID string `protobuf:"bytes,3,opt,name=prospectID,proto3" json:"prospectID,omitempty"`
}

func (x *CreateProspectResponse) Reset() {
	*x = CreateProspectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProspectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProspectResponse) ProtoMessage() {}

func (x *CreateProspectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProspectResponse.ProtoReflect.Descriptor instead.
func (*CreateProspectResponse) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{23}
}

func (x *CreateProspectResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreateProspectResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *CreateProspectResponse) GetProspectID() string {
	if x != nil {
		return x.ProspectID
	}
	return ""
}

type CreateProspectsBulkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prospects []*CreateProspect `protobuf:"bytes,1,rep,name=prospects,proto3" json:"prospects,omitempty"`
}

func (x *CreateProspectsBulkRequest) Reset() {
	*x = CreateProspectsBulkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProspectsBulkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProspectsBulkRequest) ProtoMessage() {}

func (x *CreateProspectsBulkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProspectsBulkRequest.ProtoReflect.Descriptor instead.
func (*CreateProspectsBulkRequest) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{24}
}

func (x *CreateProspectsBulkRequest) GetProspects() []*CreateProspect {
	if x != nil {
		return x.Prospects
	}
	return nil
}

type CreateProspectsBulkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      int64    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error       string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	ProspectIds []string `protobuf:"bytes,3,rep,name=prospectIds,proto3" json:"prospectIds,omitempty"`
}

func (x *CreateProspectsBulkResponse) Reset() {
	*x = CreateProspectsBulkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProspectsBulkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProspectsBulkResponse) ProtoMessage() {}

func (x *CreateProspectsBulkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProspectsBulkResponse.ProtoReflect.Descriptor instead.
func (*CreateProspectsBulkResponse) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{25}
}

func (x *CreateProspectsBulkResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreateProspectsBulkResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *CreateProspectsBulkResponse) GetProspectIds() []string {
	if x != nil {
		return x.ProspectIds
	}
	return nil
}

type DraftProspectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DraftPick   *DraftPick `protobuf:"bytes,1,opt,name=DraftPick,proto3" json:"DraftPick,omitempty"`
	ProspectID  string     `protobuf:"bytes,2,opt,name=ProspectID,proto3" json:"ProspectID,omitempty"`
	FranchiseID string     `protobuf:"bytes,3,opt,name=FranchiseID,proto3" json:"FranchiseID,omitempty"`
	LeagueID    string     `protobuf:"bytes,4,opt,name=LeagueID,proto3" json:"LeagueID,omitempty"`
}

func (x *DraftProspectRequest) Reset() {
	*x = DraftProspectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DraftProspectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DraftProspectRequest) ProtoMessage() {}

func (x *DraftProspectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DraftProspectRequest.ProtoReflect.Descriptor instead.
func (*DraftProspectRequest) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{26}
}

func (x *DraftProspectRequest) GetDraftPick() *DraftPick {
	if x != nil {
		return x.DraftPick
	}
	return nil
}

func (x *DraftProspectRequest) GetProspectID() string {
	if x != nil {
		return x.ProspectID
	}
	return ""
}

func (x *DraftProspectRequest) GetFranchiseID() string {
	if x != nil {
		return x.FranchiseID
	}
	return ""
}

func (x *DraftProspectRequest) GetLeagueID() string {
	if x != nil {
		return x.LeagueID
	}
	return ""
}

type DraftProspectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	PickID string `protobuf:"bytes,3,opt,name=pickID,proto3" json:"pickID,omitempty"`
}

func (x *DraftProspectResponse) Reset() {
	*x = DraftProspectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DraftProspectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DraftProspectResponse) ProtoMessage() {}

func (x *DraftProspectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DraftProspectResponse.ProtoReflect.Descriptor instead.
func (*DraftProspectResponse) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{27}
}

func (x *DraftProspectResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DraftProspectResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *DraftProspectResponse) GetPickID() string {
	if x != nil {
		return x.PickID
	}
	return ""
}

type GetPicksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string  `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Picks  []*Pick `protobuf:"bytes,3,rep,name=picks,proto3" json:"picks,omitempty"`
}

func (x *GetPicksResponse) Reset() {
	*x = GetPicksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPicksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPicksResponse) ProtoMessage() {}

func (x *GetPicksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPicksResponse.ProtoReflect.Descriptor instead.
func (*GetPicksResponse) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{28}
}

func (x *GetPicksResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetPicksResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *GetPicksResponse) GetPicks() []*Pick {
	if x != nil {
		return x.Picks
	}
	return nil
}

type CreateOrUpdatePick struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Franchise       string `protobuf:"bytes,1,opt,name=Franchise,proto3" json:"Franchise,omitempty"`
	FranchiseID     string `protobuf:"bytes,2,opt,name=FranchiseID,proto3" json:"FranchiseID,omitempty"`
	Year            string `protobuf:"bytes,3,opt,name=Year,proto3" json:"Year,omitempty"`
	LotteryPosition int32  `protobuf:"varint,4,opt,name=LotteryPosition,proto3" json:"LotteryPosition,omitempty"`
}

func (x *CreateOrUpdatePick) Reset() {
	*x = CreateOrUpdatePick{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrUpdatePick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrUpdatePick) ProtoMessage() {}

func (x *CreateOrUpdatePick) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrUpdatePick.ProtoReflect.Descriptor instead.
func (*CreateOrUpdatePick) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{29}
}

func (x *CreateOrUpdatePick) GetFranchise() string {
	if x != nil {
		return x.Franchise
	}
	return ""
}

func (x *CreateOrUpdatePick) GetFranchiseID() string {
	if x != nil {
		return x.FranchiseID
	}
	return ""
}

func (x *CreateOrUpdatePick) GetYear() string {
	if x != nil {
		return x.Year
	}
	return ""
}

func (x *CreateOrUpdatePick) GetLotteryPosition() int32 {
	if x != nil {
		return x.LotteryPosition
	}
	return 0
}

type CreateOrUpdatePicksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeagueID string                `protobuf:"bytes,1,opt,name=LeagueID,proto3" json:"LeagueID,omitempty"`
	Picks    []*CreateOrUpdatePick `protobuf:"bytes,2,rep,name=picks,proto3" json:"picks,omitempty"`
}

func (x *CreateOrUpdatePicksRequest) Reset() {
	*x = CreateOrUpdatePicksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrUpdatePicksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrUpdatePicksRequest) ProtoMessage() {}

func (x *CreateOrUpdatePicksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrUpdatePicksRequest.ProtoReflect.Descriptor instead.
func (*CreateOrUpdatePicksRequest) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{30}
}

func (x *CreateOrUpdatePicksRequest) GetLeagueID() string {
	if x != nil {
		return x.LeagueID
	}
	return ""
}

func (x *CreateOrUpdatePicksRequest) GetPicks() []*CreateOrUpdatePick {
	if x != nil {
		return x.Picks
	}
	return nil
}

type GetPicksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeagueID    string `protobuf:"bytes,1,opt,name=LeagueID,proto3" json:"LeagueID,omitempty"`
	FranchiseID string `protobuf:"bytes,2,opt,name=FranchiseID,proto3" json:"FranchiseID,omitempty"`
	Year        string `protobuf:"bytes,3,opt,name=Year,proto3" json:"Year,omitempty"`
}

func (x *GetPicksRequest) Reset() {
	*x = GetPicksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPicksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPicksRequest) ProtoMessage() {}

func (x *GetPicksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPicksRequest.ProtoReflect.Descriptor instead.
func (*GetPicksRequest) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{31}
}

func (x *GetPicksRequest) GetLeagueID() string {
	if x != nil {
		return x.LeagueID
	}
	return ""
}

func (x *GetPicksRequest) GetFranchiseID() string {
	if x != nil {
		return x.FranchiseID
	}
	return ""
}

func (x *GetPicksRequest) GetYear() string {
	if x != nil {
		return x.Year
	}
	return ""
}

type TradeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromFranchiseID string      `protobuf:"bytes,1,opt,name=FromFranchiseID,proto3" json:"FromFranchiseID,omitempty"`
	ToFranchiseID   string      `protobuf:"bytes,2,opt,name=ToFranchiseID,proto3" json:"ToFranchiseID,omitempty"`
	Picks           []*Pick     `protobuf:"bytes,3,rep,name=Picks,proto3" json:"Picks,omitempty"`
	Prospects       []*Prospect `protobuf:"bytes,4,rep,name=Prospects,proto3" json:"Prospects,omitempty"`
}

func (x *TradeRequest) Reset() {
	*x = TradeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeRequest) ProtoMessage() {}

func (x *TradeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeRequest.ProtoReflect.Descriptor instead.
func (*TradeRequest) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{32}
}

func (x *TradeRequest) GetFromFranchiseID() string {
	if x != nil {
		return x.FromFranchiseID
	}
	return ""
}

func (x *TradeRequest) GetToFranchiseID() string {
	if x != nil {
		return x.ToFranchiseID
	}
	return ""
}

func (x *TradeRequest) GetPicks() []*Pick {
	if x != nil {
		return x.Picks
	}
	return nil
}

func (x *TradeRequest) GetProspects() []*Prospect {
	if x != nil {
		return x.Prospects
	}
	return nil
}

type TextSearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *TextSearchRequest) Reset() {
	*x = TextSearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextSearchRequest) ProtoMessage() {}

func (x *TextSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextSearchRequest.ProtoReflect.Descriptor instead.
func (*TextSearchRequest) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{33}
}

func (x *TextSearchRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type TextSearchProspectsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status    int64       `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error     string      `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Prospects []*Prospect `protobuf:"bytes,3,rep,name=prospects,proto3" json:"prospects,omitempty"`
}

func (x *TextSearchProspectsResponse) Reset() {
	*x = TextSearchProspectsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_pb_fantasy_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextSearchProspectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextSearchProspectsResponse) ProtoMessage() {}

func (x *TextSearchProspectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_pb_fantasy_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextSearchProspectsResponse.ProtoReflect.Descriptor instead.
func (*TextSearchProspectsResponse) Descriptor() ([]byte, []int) {
	return file_service_pb_fantasy_proto_rawDescGZIP(), []int{34}
}

func (x *TextSearchProspectsResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *TextSearchProspectsResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *TextSearchProspectsResponse) GetProspects() []*Prospect {
	if x != nil {
		return x.Prospects
	}
	return nil
}

var File_service_pb_fantasy_proto protoreflect.FileDescriptor

var file_service_pb_fantasy_proto_rawDesc = []byte{
	0x0a, 0x18, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x62, 0x2f, 0x66, 0x61, 0x6e,
	0x74, 0x61, 0x73, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x66, 0x61, 0x6e, 0x74,
	0x61, 0x73, 0x79, 0x22, 0xcc, 0x03, 0x0a, 0x06, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14,
	0x0a, 0x05, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x44, 0x12, 0x22,
	0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26,
	0x0a, 0x0e, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x65, 0x61, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x59, 0x65, 0x61, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x4d, 0x61, 0x78, 0x46, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x4d,
	0x61, 0x78, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c,
	0x4d, 0x61, 0x78, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x4d, 0x61, 0x78, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73,
	0x12, 0x2c, 0x0a, 0x11, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x47,
	0x6f, 0x61, 0x6c, 0x69, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x44, 0x72, 0x61,
	0x66, 0x74, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x47, 0x6f, 0x61, 0x6c, 0x69, 0x65, 0x12, 0x2c,
	0x0a, 0x11, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x53, 0x6b, 0x61,
	0x74, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x44, 0x72, 0x61, 0x66, 0x74,
	0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x53, 0x6b, 0x61, 0x74, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b,
	0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x32,
	0x0a, 0x0a, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e, 0x46, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x52, 0x0a, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73,
	0x65, 0x73, 0x22, 0xdc, 0x01, 0x0a, 0x09, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c,
	0x0a, 0x09, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x46, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x65, 0x61, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x59, 0x65, 0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x44,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x44,
	0x12, 0x2f, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e, 0x50, 0x72,
	0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x73, 0x22, 0x81, 0x04, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1a,
	0x0a, 0x08, 0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x69,
	0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x46,
	0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x61, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4e, 0x68, 0x6c, 0x54, 0x65, 0x61, 0x6d, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4e, 0x68, 0x6c, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x22,
	0x0a, 0x0c, 0x4e, 0x68, 0x6c, 0x44, 0x72, 0x61, 0x66, 0x74, 0x59, 0x65, 0x61, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x4e, 0x68, 0x6c, 0x44, 0x72, 0x61, 0x66, 0x74, 0x59, 0x65,
	0x61, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x42, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x57, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x24, 0x0a, 0x0d, 0x4e, 0x68, 0x6c, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x6f, 0x75, 0x6e,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x4e, 0x68, 0x6c, 0x44, 0x72, 0x61, 0x66,
	0x74, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x4e, 0x68, 0x6c, 0x44, 0x72, 0x61,
	0x66, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x4f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x4e, 0x68, 0x6c, 0x44, 0x72, 0x61, 0x66, 0x74, 0x50, 0x69, 0x63,
	0x6b, 0x4f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x4e, 0x68, 0x6c, 0x50,
	0x69, 0x63, 0x6b, 0x49, 0x6e, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x4e, 0x68, 0x6c, 0x50, 0x69, 0x63, 0x6b, 0x49, 0x6e, 0x52, 0x6f, 0x75, 0x6e, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x44,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x44,
	0x12, 0x20, 0x0a, 0x0b, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x49, 0x44, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65,
	0x49, 0x44, 0x12, 0x21, 0x0a, 0x04, 0x50, 0x69, 0x63, 0x6b, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e, 0x50, 0x69, 0x63, 0x6b, 0x52,
	0x04, 0x50, 0x69, 0x63, 0x6b, 0x22, 0x88, 0x03, 0x0a, 0x04, 0x50, 0x69, 0x63, 0x6b, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1c,
	0x0a, 0x09, 0x44, 0x72, 0x61, 0x66, 0x74, 0x59, 0x65, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x44, 0x72, 0x61, 0x66, 0x74, 0x59, 0x65, 0x61, 0x72, 0x12, 0x1e, 0x0a, 0x0a,
	0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x2a, 0x0a, 0x10,
	0x44, 0x72, 0x61, 0x66, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x4f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x44, 0x72, 0x61, 0x66, 0x74, 0x50, 0x69, 0x63,
	0x6b, 0x4f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x12, 0x2a, 0x0a, 0x10, 0x44, 0x72, 0x61, 0x66,
	0x74, 0x50, 0x69, 0x63, 0x6b, 0x49, 0x6e, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x44, 0x72, 0x61, 0x66, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x49, 0x6e, 0x52,
	0x6f, 0x75, 0x6e, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65,
	0x63, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c,
	0x0a, 0x09, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x4c, 0x61, 0x73, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x4c, 0x61, 0x73, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x12, 0x24,
	0x0a, 0x0d, 0x4c, 0x61, 0x73, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x4c, 0x61, 0x73, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x49, 0x44,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x49, 0x44,
	0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0xa1, 0x01, 0x0a, 0x09, 0x44, 0x72, 0x61, 0x66, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x12, 0x1c,
	0x0a, 0x09, 0x44, 0x72, 0x61, 0x66, 0x74, 0x59, 0x65, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x44, 0x72, 0x61, 0x66, 0x74, 0x59, 0x65, 0x61, 0x72, 0x12, 0x1e, 0x0a, 0x0a,
	0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x2a, 0x0a, 0x10,
	0x44, 0x72, 0x61, 0x66, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x4f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x44, 0x72, 0x61, 0x66, 0x74, 0x50, 0x69, 0x63,
	0x6b, 0x4f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x12, 0x2a, 0x0a, 0x10, 0x44, 0x72, 0x61, 0x66,
	0x74, 0x50, 0x69, 0x63, 0x6b, 0x49, 0x6e, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x44, 0x72, 0x61, 0x66, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x49, 0x6e, 0x52,
	0x6f, 0x75, 0x6e, 0x64, 0x22, 0x3f, 0x0a, 0x0f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x8f, 0x03, 0x0a, 0x0d, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x46, 0x6f, 0x75, 0x6e, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x65, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x65, 0x61, 0x72, 0x12,
	0x24, 0x0a, 0x0d, 0x4d, 0x61, 0x78, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x4d, 0x61, 0x78, 0x46, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x69, 0x73, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x4d, 0x61, 0x78, 0x50, 0x72, 0x6f, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x4d, 0x61, 0x78,
	0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x44, 0x72, 0x61,
	0x66, 0x74, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x47, 0x6f, 0x61, 0x6c, 0x69, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x69, 0x67, 0x68, 0x74,
	0x73, 0x47, 0x6f, 0x61, 0x6c, 0x69, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x44, 0x72, 0x61, 0x66, 0x74,
	0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x53, 0x6b, 0x61, 0x74, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x11, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x53,
	0x6b, 0x61, 0x74, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x6f,
	0x75, 0x6e, 0x64, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x44, 0x72, 0x61, 0x66,
	0x74, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x22, 0x55, 0x0a, 0x13, 0x4c, 0x65, 0x61, 0x67, 0x75,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2e,
	0x0a, 0x06, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x06, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x22, 0x5a,
	0x0a, 0x0e, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x6b, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x27, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e, 0x4c, 0x65,
	0x61, 0x67, 0x75, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x2e, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x64, 0x22, 0x6a, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x27, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x77, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4c,
	0x65, 0x61, 0x67, 0x75, 0x65, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e,
	0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x38, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x46, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x50, 0x61, 0x69, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x13, 0x4c,
	0x65, 0x61, 0x67, 0x75, 0x65, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x50, 0x61,
	0x69, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x44, 0x12, 0x20,
	0x0a, 0x0b, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x49, 0x44,
	0x22, 0x85, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x46, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x50, 0x61, 0x69, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x34, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e, 0x4c, 0x65, 0x61,
	0x67, 0x75, 0x65, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x50, 0x61, 0x69, 0x72,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xa2, 0x01, 0x0a, 0x10, 0x46, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x46, 0x6f, 0x75,
	0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x65, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x65, 0x61,
	0x72, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x64, 0x22, 0x63, 0x0a,
	0x11, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x20, 0x0a, 0x0b, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65,
	0x49, 0x64, 0x22, 0x37, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x46, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x49, 0x44, 0x22, 0x70, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x2a, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e, 0x46, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x69, 0x73, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x9a, 0x03,
	0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x68, 0x6c, 0x54, 0x65, 0x61,
	0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x68, 0x6c, 0x54, 0x65, 0x61, 0x6d,
	0x12, 0x1c, 0x0a, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x74, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x64, 0x72, 0x61, 0x66, 0x74, 0x59, 0x65, 0x61, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x64, 0x72, 0x61, 0x66, 0x74, 0x59, 0x65, 0x61, 0x72, 0x12, 0x24, 0x0a, 0x0d,
	0x6e, 0x68, 0x6c, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x68, 0x6c, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x6f, 0x75,
	0x6e, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x6e, 0x68, 0x6c, 0x44, 0x72, 0x61, 0x66, 0x74, 0x50, 0x69,
	0x63, 0x6b, 0x4f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x6e, 0x68, 0x6c, 0x44, 0x72, 0x61, 0x66, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x4f, 0x76, 0x65,
	0x72, 0x61, 0x6c, 0x6c, 0x12, 0x30, 0x0a, 0x13, 0x6e, 0x68, 0x6c, 0x44, 0x72, 0x61, 0x66, 0x74,
	0x50, 0x69, 0x63, 0x6b, 0x49, 0x6e, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x6e, 0x68, 0x6c, 0x44, 0x72, 0x61, 0x66, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x49,
	0x6e, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x46, 0x0a, 0x15, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e,
	0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65,
	0x63, 0x74, 0x22, 0x66, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x49, 0x44, 0x22, 0x53, 0x0a, 0x1a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x42, 0x75, 0x6c,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x66, 0x61,
	0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x22,
	0x6d, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63,
	0x74, 0x73, 0x42, 0x75, 0x6c, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0b,
	0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x22, 0xa6,
	0x01, 0x0a, 0x14, 0x44, 0x72, 0x61, 0x66, 0x74, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x09, 0x44, 0x72, 0x61, 0x66, 0x74,
	0x50, 0x69, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x61, 0x6e,
	0x74, 0x61, 0x73, 0x79, 0x2e, 0x44, 0x72, 0x61, 0x66, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x52, 0x09,
	0x44, 0x72, 0x61, 0x66, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x72, 0x6f,
	0x73, 0x70, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50,
	0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x46, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4c,
	0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c,
	0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x44, 0x22, 0x5d, 0x0a, 0x15, 0x44, 0x72, 0x61, 0x66, 0x74,
	0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x69, 0x63, 0x6b, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x69, 0x63, 0x6b, 0x49, 0x44, 0x22, 0x65, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x69, 0x63,
	0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x69, 0x63, 0x6b,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73,
	0x79, 0x2e, 0x50, 0x69, 0x63, 0x6b, 0x52, 0x05, 0x70, 0x69, 0x63, 0x6b, 0x73, 0x22, 0x92, 0x01,
	0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x69, 0x63, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69,
	0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69,
	0x73, 0x65, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x59, 0x65, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x59, 0x65, 0x61, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x4c, 0x6f, 0x74, 0x74,
	0x65, 0x72, 0x79, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0f, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x6b, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x69, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x44, 0x12, 0x31, 0x0a, 0x05,
	0x70, 0x69, 0x63, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x66, 0x61,
	0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x69, 0x63, 0x6b, 0x52, 0x05, 0x70, 0x69, 0x63, 0x6b, 0x73, 0x22,
	0x63, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x44, 0x12, 0x20,
	0x0a, 0x0b, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x49, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x59, 0x65, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x59, 0x65, 0x61, 0x72, 0x22, 0xb4, 0x01, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x46, 0x72, 0x6f, 0x6d, 0x46, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x46, 0x72, 0x6f, 0x6d, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x49, 0x44, 0x12,
	0x24, 0x0a, 0x0d, 0x54, 0x6f, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x54, 0x6f, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x69, 0x73, 0x65, 0x49, 0x44, 0x12, 0x23, 0x0a, 0x05, 0x50, 0x69, 0x63, 0x6b, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e, 0x50,
	0x69, 0x63, 0x6b, 0x52, 0x05, 0x50, 0x69, 0x63, 0x6b, 0x73, 0x12, 0x2f, 0x0a, 0x09, 0x50, 0x72,
	0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x52, 0x09, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x22, 0x27, 0x0a, 0x11, 0x54,
	0x65, 0x78, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x22, 0x7c, 0x0a, 0x1b, 0x54, 0x65, 0x78, 0x74, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x2f, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e, 0x50,
	0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63,
	0x74, 0x73, 0x32, 0xf5, 0x0a, 0x0a, 0x0e, 0x46, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c,
	0x65, 0x61, 0x67, 0x75, 0x65, 0x12, 0x16, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e,
	0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4c,
	0x65, 0x61, 0x67, 0x75, 0x65, 0x73, 0x12, 0x1a, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79,
	0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x44, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x12, 0x19,
	0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x67,
	0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x66, 0x61, 0x6e, 0x74,
	0x61, 0x73, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x12, 0x1c, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73,
	0x79, 0x2e, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e,
	0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x58, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x46, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x73, 0x12, 0x19, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73,
	0x79, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0f, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x12, 0x19, 0x2e,
	0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61,
	0x73, 0x79, 0x2e, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x12, 0x1c, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79,
	0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e, 0x47,
	0x65, 0x74, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x12, 0x1e, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73,
	0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73,
	0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x13, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x42, 0x75, 0x6c,
	0x6b, 0x12, 0x23, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x42, 0x75, 0x6c, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73,
	0x42, 0x75, 0x6c, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59,
	0x0a, 0x13, 0x54, 0x65, 0x78, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x73, 0x12, 0x1a, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e,
	0x54, 0x65, 0x78, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x24, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e, 0x54, 0x65, 0x78, 0x74,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x50, 0x69, 0x63, 0x6b, 0x73, 0x42, 0x79, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65,
	0x12, 0x18, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x69,
	0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x66, 0x61, 0x6e,
	0x74, 0x61, 0x73, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x69,
	0x63, 0x6b, 0x73, 0x42, 0x79, 0x59, 0x65, 0x61, 0x72, 0x12, 0x18, 0x2e, 0x66, 0x61, 0x6e, 0x74,
	0x61, 0x73, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x69, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x3a, 0x0a, 0x05, 0x54, 0x72, 0x61, 0x64, 0x65, 0x12, 0x15, 0x2e, 0x66, 0x61, 0x6e, 0x74,
	0x61, 0x73, 0x79, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x18, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x13,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x69,
	0x63, 0x6b, 0x73, 0x12, 0x23, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x69, 0x63, 0x6b,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61,
	0x73, 0x79, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0d, 0x44, 0x72, 0x61, 0x66, 0x74, 0x50, 0x72, 0x6f,
	0x73, 0x70, 0x65, 0x63, 0x74, 0x12, 0x1d, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e,
	0x44, 0x72, 0x61, 0x66, 0x74, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e, 0x44,
	0x72, 0x61, 0x66, 0x74, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0f, 0x55, 0x6e, 0x64, 0x72, 0x61, 0x66,
	0x74, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x12, 0x1d, 0x2e, 0x66, 0x61, 0x6e, 0x74,
	0x61, 0x73, 0x79, 0x2e, 0x44, 0x72, 0x61, 0x66, 0x74, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61,
	0x73, 0x79, 0x2e, 0x44, 0x72, 0x61, 0x66, 0x74, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65,
	0x50, 0x61, 0x69, 0x72, 0x73, 0x12, 0x27, 0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69,
	0x73, 0x65, 0x50, 0x61, 0x69, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28,
	0x2e, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x67,
	0x75, 0x65, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x50, 0x61, 0x69, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0e, 0x5a, 0x0c, 0x2e, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_service_pb_fantasy_proto_rawDescOnce sync.Once
	file_service_pb_fantasy_proto_rawDescData = file_service_pb_fantasy_proto_rawDesc
)

func file_service_pb_fantasy_proto_rawDescGZIP() []byte {
	file_service_pb_fantasy_proto_rawDescOnce.Do(func() {
		file_service_pb_fantasy_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_pb_fantasy_proto_rawDescData)
	})
	return file_service_pb_fantasy_proto_rawDescData
}

var file_service_pb_fantasy_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_service_pb_fantasy_proto_goTypes = []interface{}{
	(*League)(nil),                          // 0: fantasy.League
	(*Franchise)(nil),                       // 1: fantasy.Franchise
	(*Prospect)(nil),                        // 2: fantasy.Prospect
	(*Pick)(nil),                            // 3: fantasy.Pick
	(*DraftPick)(nil),                       // 4: fantasy.DraftPick
	(*DefaultResponse)(nil),                 // 5: fantasy.DefaultResponse
	(*LeagueRequest)(nil),                   // 6: fantasy.LeagueRequest
	(*LeagueUpdateRequest)(nil),             // 7: fantasy.LeagueUpdateRequest
	(*LeagueResponse)(nil),                  // 8: fantasy.LeagueResponse
	(*GetLeaguesRequest)(nil),               // 9: fantasy.GetLeaguesRequest
	(*GetLeaguesResponse)(nil),              // 10: fantasy.GetLeaguesResponse
	(*GetLeagueRequest)(nil),                // 11: fantasy.GetLeagueRequest
	(*GetLeagueResponse)(nil),               // 12: fantasy.GetLeagueResponse
	(*GetLeagueFranchisesResponse)(nil),     // 13: fantasy.GetLeagueFranchisesResponse
	(*GetLeagueFranchisePairsRequest)(nil),  // 14: fantasy.GetLeagueFranchisePairsRequest
	(*LeagueFranchisePair)(nil),             // 15: fantasy.LeagueFranchisePair
	(*GetLeagueFranchisePairsResponse)(nil), // 16: fantasy.GetLeagueFranchisePairsResponse
	(*FranchiseRequest)(nil),                // 17: fantasy.FranchiseRequest
	(*FranchiseResponse)(nil),               // 18: fantasy.FranchiseResponse
	(*GetFranchiseRequest)(nil),             // 19: fantasy.GetFranchiseRequest
	(*GetFranchiseResponse)(nil),            // 20: fantasy.GetFranchiseResponse
	(*CreateProspect)(nil),                  // 21: fantasy.CreateProspect
	(*CreateProspectRequest)(nil),           // 22: fantasy.CreateProspectRequest
	(*CreateProspectResponse)(nil),          // 23: fantasy.CreateProspectResponse
	(*CreateProspectsBulkRequest)(nil),      // 24: fantasy.CreateProspectsBulkRequest
	(*CreateProspectsBulkResponse)(nil),     // 25: fantasy.CreateProspectsBulkResponse
	(*DraftProspectRequest)(nil),            // 26: fantasy.DraftProspectRequest
	(*DraftProspectResponse)(nil),           // 27: fantasy.DraftProspectResponse
	(*GetPicksResponse)(nil),                // 28: fantasy.GetPicksResponse
	(*CreateOrUpdatePick)(nil),              // 29: fantasy.CreateOrUpdatePick
	(*CreateOrUpdatePicksRequest)(nil),      // 30: fantasy.CreateOrUpdatePicksRequest
	(*GetPicksRequest)(nil),                 // 31: fantasy.GetPicksRequest
	(*TradeRequest)(nil),                    // 32: fantasy.TradeRequest
	(*TextSearchRequest)(nil),               // 33: fantasy.TextSearchRequest
	(*TextSearchProspectsResponse)(nil),     // 34: fantasy.TextSearchProspectsResponse
}
var file_service_pb_fantasy_proto_depIdxs = []int32{
	1,  // 0: fantasy.League.Franchises:type_name -> fantasy.Franchise
	2,  // 1: fantasy.Franchise.Prospects:type_name -> fantasy.Prospect
	3,  // 2: fantasy.Prospect.Pick:type_name -> fantasy.Pick
	6,  // 3: fantasy.LeagueUpdateRequest.league:type_name -> fantasy.LeagueRequest
	0,  // 4: fantasy.GetLeaguesResponse.result:type_name -> fantasy.League
	0,  // 5: fantasy.GetLeagueResponse.result:type_name -> fantasy.League
	1,  // 6: fantasy.GetLeagueFranchisesResponse.result:type_name -> fantasy.Franchise
	15, // 7: fantasy.GetLeagueFranchisePairsResponse.result:type_name -> fantasy.LeagueFranchisePair
	1,  // 8: fantasy.GetFranchiseResponse.result:type_name -> fantasy.Franchise
	2,  // 9: fantasy.CreateProspectRequest.prospect:type_name -> fantasy.Prospect
	21, // 10: fantasy.CreateProspectsBulkRequest.prospects:type_name -> fantasy.CreateProspect
	4,  // 11: fantasy.DraftProspectRequest.DraftPick:type_name -> fantasy.DraftPick
	3,  // 12: fantasy.GetPicksResponse.picks:type_name -> fantasy.Pick
	29, // 13: fantasy.CreateOrUpdatePicksRequest.picks:type_name -> fantasy.CreateOrUpdatePick
	3,  // 14: fantasy.TradeRequest.Picks:type_name -> fantasy.Pick
	2,  // 15: fantasy.TradeRequest.Prospects:type_name -> fantasy.Prospect
	2,  // 16: fantasy.TextSearchProspectsResponse.prospects:type_name -> fantasy.Prospect
	6,  // 17: fantasy.FantasyService.CreateLeague:input_type -> fantasy.LeagueRequest
	9,  // 18: fantasy.FantasyService.GetLeagues:input_type -> fantasy.GetLeaguesRequest
	11, // 19: fantasy.FantasyService.GetLeague:input_type -> fantasy.GetLeagueRequest
	7,  // 20: fantasy.FantasyService.UpdateLeague:input_type -> fantasy.LeagueUpdateRequest
	11, // 21: fantasy.FantasyService.GetLeagueFranchises:input_type -> fantasy.GetLeagueRequest
	17, // 22: fantasy.FantasyService.CreateFranchise:input_type -> fantasy.FranchiseRequest
	19, // 23: fantasy.FantasyService.GetFranchise:input_type -> fantasy.GetFranchiseRequest
	22, // 24: fantasy.FantasyService.CreateProspect:input_type -> fantasy.CreateProspectRequest
	24, // 25: fantasy.FantasyService.CreateProspectsBulk:input_type -> fantasy.CreateProspectsBulkRequest
	33, // 26: fantasy.FantasyService.TextSearchProspects:input_type -> fantasy.TextSearchRequest
	31, // 27: fantasy.FantasyService.GetPicksByFranchise:input_type -> fantasy.GetPicksRequest
	31, // 28: fantasy.FantasyService.GetPicksByYear:input_type -> fantasy.GetPicksRequest
	32, // 29: fantasy.FantasyService.Trade:input_type -> fantasy.TradeRequest
	30, // 30: fantasy.FantasyService.CreateOrUpdatePicks:input_type -> fantasy.CreateOrUpdatePicksRequest
	26, // 31: fantasy.FantasyService.DraftProspect:input_type -> fantasy.DraftProspectRequest
	26, // 32: fantasy.FantasyService.UndraftProspect:input_type -> fantasy.DraftProspectRequest
	14, // 33: fantasy.FantasyService.GetLeagueFranchisePairs:input_type -> fantasy.GetLeagueFranchisePairsRequest
	8,  // 34: fantasy.FantasyService.CreateLeague:output_type -> fantasy.LeagueResponse
	10, // 35: fantasy.FantasyService.GetLeagues:output_type -> fantasy.GetLeaguesResponse
	12, // 36: fantasy.FantasyService.GetLeague:output_type -> fantasy.GetLeagueResponse
	8,  // 37: fantasy.FantasyService.UpdateLeague:output_type -> fantasy.LeagueResponse
	13, // 38: fantasy.FantasyService.GetLeagueFranchises:output_type -> fantasy.GetLeagueFranchisesResponse
	18, // 39: fantasy.FantasyService.CreateFranchise:output_type -> fantasy.FranchiseResponse
	20, // 40: fantasy.FantasyService.GetFranchise:output_type -> fantasy.GetFranchiseResponse
	23, // 41: fantasy.FantasyService.CreateProspect:output_type -> fantasy.CreateProspectResponse
	25, // 42: fantasy.FantasyService.CreateProspectsBulk:output_type -> fantasy.CreateProspectsBulkResponse
	34, // 43: fantasy.FantasyService.TextSearchProspects:output_type -> fantasy.TextSearchProspectsResponse
	28, // 44: fantasy.FantasyService.GetPicksByFranchise:output_type -> fantasy.GetPicksResponse
	28, // 45: fantasy.FantasyService.GetPicksByYear:output_type -> fantasy.GetPicksResponse
	5,  // 46: fantasy.FantasyService.Trade:output_type -> fantasy.DefaultResponse
	5,  // 47: fantasy.FantasyService.CreateOrUpdatePicks:output_type -> fantasy.DefaultResponse
	27, // 48: fantasy.FantasyService.DraftProspect:output_type -> fantasy.DraftProspectResponse
	27, // 49: fantasy.FantasyService.UndraftProspect:output_type -> fantasy.DraftProspectResponse
	16, // 50: fantasy.FantasyService.GetLeagueFranchisePairs:output_type -> fantasy.GetLeagueFranchisePairsResponse
	34, // [34:51] is the sub-list for method output_type
	17, // [17:34] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_service_pb_fantasy_proto_init() }
func file_service_pb_fantasy_proto_init() {
	if File_service_pb_fantasy_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_service_pb_fantasy_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*League); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Franchise); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Prospect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pick); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DraftPick); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DefaultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeagueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeagueUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeagueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLeaguesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLeaguesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLeagueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLeagueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLeagueFranchisesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLeagueFranchisePairsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeagueFranchisePair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLeagueFranchisePairsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FranchiseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FranchiseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFranchiseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFranchiseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProspect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProspectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProspectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProspectsBulkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProspectsBulkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DraftProspectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DraftProspectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPicksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrUpdatePick); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrUpdatePicksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPicksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextSearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_pb_fantasy_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextSearchProspectsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_pb_fantasy_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_pb_fantasy_proto_goTypes,
		DependencyIndexes: file_service_pb_fantasy_proto_depIdxs,
		MessageInfos:      file_service_pb_fantasy_proto_msgTypes,
	}.Build()
	File_service_pb_fantasy_proto = out.File
	file_service_pb_fantasy_proto_rawDesc = nil
	file_service_pb_fantasy_proto_goTypes = nil
	file_service_pb_fantasy_proto_depIdxs = nil
}
